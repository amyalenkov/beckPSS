Index: .idea/libraries/Maven__org_springframework_spring_context_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_context_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_context_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-context:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/updater/UpdateTeamsImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/updater/UpdateTeamsImpl.java	(revision )
+++ src/main/java/net/pss/beck/updater/UpdateTeamsImpl.java	(revision )
@@ -0,0 +1,59 @@
+package net.pss.beck.updater;
+
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.Tournament;
+import net.pss.beck.parser.ParserHelper;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+public class UpdateTeamsImpl extends UpdateUtils implements UpdateTeams {
+
+    private List<Team> teamsNew;
+    private List<String> nameTeamNew;
+
+    public UpdateTeamsImpl(Tournament tournament) throws IOException {
+        ParserHelper parserHelper = new ParserHelper();
+        teamsNew = parserHelper.getAllTeamsInTour(tournament.getName());
+        nameTeamNew = toListNameTeams(teamsNew);
+    }
+
+    @Override
+    public List<String> getTeamNamesForAddInTournament(List<Team> teamsOld) throws IOException {
+        List<String> teams = new ArrayList<String>();
+        List<String> nameTeamOld = toListNameTeams(teamsOld);
+        for(Team team : teamsNew){
+            if(!nameTeamOld.contains(team.getName())){
+                teams.add(team.getName());
+            }
+        }
+        return teams;
+    }
+
+    @Override
+    public List<Team> getNewTeamsForAdd(List<Team> allTeams) throws IOException {
+        List<Team> teams = new ArrayList<Team>();
+        List<String> nameTeamAll = toListNameTeams(allTeams);
+        for(Team team : teamsNew){
+            if(!nameTeamAll.contains(team.getName())){
+                teams.add(team);
+            }
+        }
+        return teams;
+    }
+
+    @Override
+    public List<Team> getTeamsForDeleteFromTournament(List<Team> teamsOld) throws IOException {
+        List<Team> teams = new ArrayList<Team>();
+        for(Team team : teamsOld){
+            if(!nameTeamNew.contains(team.getName())){
+                teams.add(team);
+            }
+        }
+        return teams;
+    }
+}
Index: src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml	(revision )
+++ src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml	(revision )
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans:beans xmlns="http://www.springframework.org/schema/mvc"
+             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+             xmlns:beans="http://www.springframework.org/schema/beans"
+             xmlns:mvc="http://www.springframework.org/schema/task"
+             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
+        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
+
+	<!-- DispatcherServlet Context: определяет настройки одного сервлета; бины, 
+		которые доступны только ему -->
+
+	<!-- Разрешаем использование аннотаций Spring MVC (то есть @Controller и.т.д) -->
+	<annotation-driven />
+
+	<!-- Всю статику (изображения, css-файлы, javascript) положим в папку webapp/resources 
+		и замаппим их на урл вида /resources/** -->
+	<resources mapping="/resources/**" location="/resources/" />
+
+	<!-- Отображение видов на jsp-файлы, лежащие в папке /WEB-INF/views -->
+	<beans:bean
+		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
+		<beans:property name="prefix" value="/WEB-INF/views/" />
+		<beans:property name="suffix" value=".jsp" />
+	</beans:bean>
+
+	<!-- Файл с настройками контроллеров -->
+	<beans:import resource="controllers.xml" />
+    <mvc:annotation-driven />
+
+
+</beans:beans>
\ No newline at end of file
Index: src/main/java/net/pss/beck/service/PlayerServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/PlayerServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/service/PlayerServiceImpl.java	(revision )
@@ -0,0 +1,46 @@
+package net.pss.beck.service;
+
+import net.pss.beck.dao.PlayerDAO;
+import net.pss.beck.domain.Player;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Service
+public class PlayerServiceImpl implements PlayerService {
+
+    @Autowired
+    private PlayerDAO playerDAO;
+
+    @Override
+    @Transactional
+    public void addPlayer(Player player) {
+        playerDAO.addPlayer(player);
+    }
+
+    @Override
+    @Transactional
+    public List<Player> getPlayers() {
+        return playerDAO.getPlayers();
+    }
+
+    @Override
+    @Transactional
+    public Player getPlayerById(Integer id){
+        return playerDAO.getPlayerById(id);
+    }
+
+    @Override
+    @Transactional
+    public Player getPlayerByLastNameAndData(String lastName, String data){
+        return playerDAO.getPlayerByLastNameAndData(lastName, data);
+    }
+
+
+
+}
Index: src/main/java/net/pss/beck/service/TeamServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/TeamServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/service/TeamServiceImpl.java	(revision )
@@ -0,0 +1,52 @@
+package net.pss.beck.service;
+
+import net.pss.beck.dao.TeamDAO;
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Service
+public class TeamServiceImpl implements TeamService {
+
+    @Autowired
+    private TeamDAO teamDAO;
+
+    @Override
+    @Transactional
+    public void addTeam(Team team) {
+        teamDAO.addTeam(team);
+    }
+
+    @Override
+    @Transactional
+    public List<Team> getListTeams() {
+        return teamDAO.getListTeams();
+    }
+
+    @Override
+    @Transactional
+    public Map<Player, Integer> getPlayersByTeamId(Integer id){
+        return teamDAO.getPlayersByTeamId(id);
+    }
+
+    @Override
+    @Transactional
+    public Team getTeamById(Integer id){
+        return teamDAO.getTeamById(id);
+    }
+
+    @Override
+    @Transactional
+    public Team getTeamByName(String name){
+        return teamDAO.getTeamByName(name);
+    }
+
+}
Index: .idea/artifacts/contactmanager_war_exploded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/artifacts/contactmanager_war_exploded.xml	(revision )
+++ .idea/artifacts/contactmanager_war_exploded.xml	(revision )
@@ -0,0 +1,62 @@
+<component name="ArtifactManager">
+  <artifact type="exploded-war" name="contactmanager:war exploded">
+    <output-path>$PROJECT_DIR$/target/contactmanager-1.0.0-BUILD-SNAPSHOT</output-path>
+    <root id="root">
+      <element id="javaee-facet-resources" facet="beck/web/Web" />
+      <element id="directory" name="WEB-INF">
+        <element id="directory" name="classes">
+          <element id="module-output" name="beck" />
+        </element>
+        <element id="directory" name="lib">
+          <element id="library" level="project" name="Maven: org.springframework:spring-context:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-aop:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: aopalliance:aopalliance:1.0" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-asm:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-beans:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-core:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-expression:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-webmvc:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-context-support:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-web:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework.security:spring-security-web:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework.security:spring-security-core:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-tx:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.aspectj:aspectjrt:1.6.9" />
+          <element id="library" level="project" name="Maven: org.aspectj:aspectjweaver:1.6.8" />
+          <element id="library" level="project" name="Maven: org.springframework.security:spring-security-config:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: javax.persistence:persistence-api:1.0" />
+          <element id="library" level="project" name="Maven: org.hibernate:hibernate-core:3.3.2.GA" />
+          <element id="library" level="project" name="Maven: antlr:antlr:2.7.6" />
+          <element id="library" level="project" name="Maven: commons-collections:commons-collections:3.1" />
+          <element id="library" level="project" name="Maven: dom4j:dom4j:1.6.1" />
+          <element id="library" level="project" name="Maven: xml-apis:xml-apis:1.0.b2" />
+          <element id="library" level="project" name="Maven: javax.transaction:jta:1.1" />
+          <element id="library" level="project" name="Maven: org.slf4j:slf4j-api:1.5.10" />
+          <element id="library" level="project" name="Maven: org.hibernate:hibernate-annotations:3.3.1.GA" />
+          <element id="library" level="project" name="Maven: org.hibernate:hibernate:3.2.6.ga" />
+          <element id="library" level="project" name="Maven: net.sf.ehcache:ehcache:1.2.3" />
+          <element id="library" level="project" name="Maven: commons-logging:commons-logging:1.0.4" />
+          <element id="library" level="project" name="Maven: asm:asm-attrs:1.5.3" />
+          <element id="library" level="project" name="Maven: cglib:cglib:2.1_3" />
+          <element id="library" level="project" name="Maven: asm:asm:1.5.3" />
+          <element id="library" level="project" name="Maven: org.hibernate:hibernate-commons-annotations:3.3.0.ga" />
+          <element id="library" level="project" name="Maven: org.hibernate:ejb3-persistence:1.0.1.GA" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-orm:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: org.springframework:spring-jdbc:3.0.5.RELEASE" />
+          <element id="library" level="project" name="Maven: mysql:mysql-connector-java:5.1.6" />
+          <element id="library" level="project" name="Maven: org.slf4j:jcl-over-slf4j:1.5.10" />
+          <element id="library" level="project" name="Maven: org.slf4j:slf4j-log4j12:1.5.10" />
+          <element id="library" level="project" name="Maven: log4j:log4j:1.2.15" />
+          <element id="library" level="project" name="Maven: javax.inject:javax.inject:1" />
+          <element id="library" level="project" name="Maven: javax.servlet:jstl:1.2" />
+          <element id="library" level="project" name="Maven: com.fasterxml.jackson.core:jackson-core:2.2.2" />
+          <element id="library" level="project" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.2.2" />
+          <element id="library" level="project" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.2.2" />
+          <element id="library" level="project" name="Maven: org.jsoup:jsoup:1.7.2" />
+          <element id="library" level="project" name="org.jsoup:jsoup:1.7.3" />
+          <element id="library" level="project" name="junit:junit:4.11" />
+        </element>
+      </element>
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/domain/Tournament.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/Tournament.java	(revision )
+++ src/main/java/net/pss/beck/domain/Tournament.java	(revision )
@@ -0,0 +1,71 @@
+package net.pss.beck.domain;
+
+import javax.persistence.*;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Entity
+@Table(name = "TOURNAMENTS")
+public class Tournament {
+
+    @Id
+    @Column(name = "ID_TOURNAMENT")
+    @GeneratedValue
+    private Integer id;
+
+    @Column(name = "NAME")
+    private String name;
+
+    @Column(name = "DATA")
+    private String data;
+
+    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tournament")
+    private List<TeamsInTournament> teams;
+
+
+    @OneToMany(fetch = FetchType.EAGER, mappedBy = "tournament")
+    private List<Matches> matchesList;
+
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getData() {
+        return data;
+    }
+
+    public void setData(String data) {
+        this.data = data;
+    }
+
+    public List<Matches> getMatchesList() {
+        return matchesList;
+    }
+
+    public void setMatchesList(List<Matches> matchesList) {
+        this.matchesList = matchesList;
+    }
+
+    public List<TeamsInTournament> getTeams() {
+        return teams;
+    }
+
+    public void setTeams(List<TeamsInTournament> teams) {
+        this.teams = teams;
+    }
+}
Index: src/main/java/net/pss/beck/domain/json/JInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/json/JInfo.java	(revision )
+++ src/main/java/net/pss/beck/domain/json/JInfo.java	(revision )
@@ -0,0 +1,53 @@
+package net.pss.beck.domain.json;
+
+import com.fasterxml.jackson.annotation.JsonProperty;
+
+import java.io.Serializable;
+
+/**
+ * Created by amyalenkov on 03.01.14.
+ */
+public class JInfo implements Serializable{
+    @JsonProperty("matchId")
+    private String matchId;
+
+    @JsonProperty("timeId")
+    private String timeId;
+
+    @JsonProperty("userName")
+    private String userName;
+
+    public JInfo(String matchId, String timeId, String userName) {
+        this.matchId = matchId;
+        this.timeId = timeId;
+        this.userName = userName;
+    }
+
+    public JInfo(){
+
+    }
+
+    public String getMatchId() {
+        return matchId;
+    }
+
+    public void setMatchId(String matchId) {
+        this.matchId = matchId;
+    }
+
+    public String getTimeId() {
+        return timeId;
+    }
+
+    public void setTimeId(String timeId) {
+        this.timeId = timeId;
+    }
+
+    public String getUserName() {
+        return userName;
+    }
+
+    public void setUserName(String userName) {
+        this.userName = userName;
+    }
+}
Index: src/main/java/net/pss/beck/dao/PlayerDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/PlayerDAO.java	(revision )
+++ src/main/java/net/pss/beck/dao/PlayerDAO.java	(revision )
@@ -0,0 +1,16 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Player;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+public interface PlayerDAO {
+
+    public void addPlayer(Player player);
+    public List getPlayers();
+    public Player getPlayerById(Integer id);
+    public Player getPlayerByLastNameAndData(String lastName, String data);
+}
Index: src/main/java/net/pss/beck/dao/RefereeDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/RefereeDAO.java	(revision )
+++ src/main/java/net/pss/beck/dao/RefereeDAO.java	(revision )
@@ -0,0 +1,10 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Referee;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+public interface RefereeDAO {
+    public void addReferee(Referee referee);
+}
Index: src/main/java/net/pss/beck/updater/UpdatePlayersInTeamImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/updater/UpdatePlayersInTeamImpl.java	(revision )
+++ src/main/java/net/pss/beck/updater/UpdatePlayersInTeamImpl.java	(revision )
@@ -0,0 +1,86 @@
+package net.pss.beck.updater;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.Tournament;
+import net.pss.beck.parser.ParserHelper;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+public class UpdatePlayersInTeamImpl extends UpdateUtils implements UpdatePlayersInTeam {
+
+    private List<Player> playersNew;
+    private List<String> playersNameDataNew;
+    private Map<String, Player> numberPlayerNew;
+
+    public UpdatePlayersInTeamImpl(Team team, Tournament tournament) throws IOException {
+        ParserHelper parserHelper = new ParserHelper();
+        playersNew = parserHelper.getPlayersOfTeam(team.getName(), tournament.getName());
+        playersNameDataNew = toListPlayersNameData(playersNew);
+        numberPlayerNew = parserHelper.getNumberPlayer();
+    }
+
+    @Override
+    public List<Player> getNewPlayersForAdd(List<Player> allPlayers) {
+        List<Player> players = new ArrayList<Player>();
+        List<String> nameDataPlayerAll = toListPlayersNameData(allPlayers);
+        for (Player player : playersNew) {
+            if (!nameDataPlayerAll.contains(player.getLastName() + player.getData())) {
+                players.add(player);
+            }
+        }
+        return players;
+    }
+
+    @Override
+    public Map<String, Player> getNewPlayersForAddInTeam(List<Player> playersOld) {
+        Map<String, Player> numberPlayer = new HashMap<String, Player>();
+        List<String> nameDataPlayerOld = toListPlayersNameData(playersOld);
+        for (String number : numberPlayerNew.keySet()) {
+            if (!nameDataPlayerOld.contains(
+                    numberPlayerNew.get(number).getLastName() + numberPlayerNew.get(number).getData())) {
+                numberPlayer.put(number, numberPlayerNew.get(number));
+            }
+        }
+        return numberPlayer;
+    }
+
+    @Override
+    public List<Player> getPlayersForDeleteInTeam(List<Player> playersInTeamOld) {
+        List<Player> players = new ArrayList<Player>();
+        for (Player player : playersInTeamOld) {
+            if (!playersNameDataNew.contains(player.getLastName() + player.getData())) {
+                players.add(player);
+            }
+        }
+        return players;
+    }
+
+    @Override
+    public Map<String, Player> getPlayersForUpdateNumberInTeam(Map<String, Player> playersInTeamOld) {
+        Map<String, Player> updatePlayer = new HashMap<String, Player>();
+        for (String number : numberPlayerNew.keySet()) {
+            if (!playersInTeamOld.containsKey(number)) {
+                updatePlayer.put(number, numberPlayerNew.get(number));
+            } else {
+                String nameDataNew = numberPlayerNew.get(number).getLastName() +
+                        numberPlayerNew.get(number).getLastName();
+                String nameDataOld = playersInTeamOld.get(number).getLastName() +
+                        playersInTeamOld.get(number).getLastName();
+                if (!nameDataNew.equals(nameDataOld)) {
+                    updatePlayer.put(number, numberPlayerNew.get(number));
+                }
+            }
+        }
+        return updatePlayer;
+    }
+
+
+}
Index: src/main/java/net/pss/beck/domain/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/Player.java	(revision )
+++ src/main/java/net/pss/beck/domain/Player.java	(revision )
@@ -0,0 +1,79 @@
+package net.pss.beck.domain;
+
+import javax.persistence.*;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Entity
+@Table(name = "PLAYERS")
+public class Player {
+    @Id
+    @Column(name = "ID_PLAYER")
+    @GeneratedValue
+    private Integer id;
+
+    @Column(name = "FIRST_NAME")
+    private String firstName;
+
+    @Column(name = "LAST_NAME")
+    private String lastName;
+
+    @Column(name = "DATA")
+    private String data;
+
+    @Column(name = "COUNTRY")
+    private String counrty;
+
+    @OneToMany(fetch = FetchType.EAGER, mappedBy = "player")
+    private List<PlayersInTeams> playerInTeam;
+
+    public String getCounrty() {
+        return counrty;
+    }
+
+    public void setCounrty(String counrty) {
+        this.counrty = counrty;
+    }
+
+    public String getData() {
+        return data;
+    }
+
+    public void setData(String data) {
+        this.data = data;
+    }
+
+    public String getLastName() {
+        return lastName;
+    }
+
+    public void setLastName(String lastName) {
+        this.lastName = lastName;
+    }
+
+    public String getFirstName() {
+        return firstName;
+    }
+
+    public void setFirstName(String firstName) {
+        this.firstName = firstName;
+    }
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    public List<PlayersInTeams> getPlayerInTeam() {
+        return playerInTeam;
+    }
+
+    public void setPlayerInTeam(List<PlayersInTeams> playerInTeam) {
+        this.playerInTeam = playerInTeam;
+    }
+}
Index: src/main/webapp/WEB-INF/views/parser.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/views/parser.jsp	(revision )
+++ src/main/webapp/WEB-INF/views/parser.jsp	(revision )
@@ -0,0 +1,30 @@
+<%--
+  Created by IntelliJ IDEA.
+  User: amyalenkov
+  Date: 05.01.14
+  Time: 21:07
+  To change this template use File | Settings | File Templates.
+--%>
+<%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<html>
+<head>
+    <title></title>
+</head>
+<body>
+<form method="post" action="save_teams">
+    <input type="submit" value="save_teams">
+</form>
+<form method="post" action="save_all_tours">
+    <input type="submit" value="All_tour_save">
+</form>
+<form method="post" action="save_player">
+    <input type="submit" value="save_player">
+</form>
+<form method="post" action="check">
+    <input type="submit" value="hands_check">
+</form>
+<form method="post" action="checkPlay">
+    <input type="submit" value="checkPlay">
+</form>
+</body>
+</html>
Index: src/main/webapp/login.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/login.jsp	(revision )
+++ src/main/webapp/login.jsp	(revision )
@@ -0,0 +1,42 @@
+<%@ page language="java" contentType="text/html; charset=utf8"
+	pageEncoding="utf8"%>
+<%@taglib uri="http://www.springframework.org/tags" prefix="spring"%>
+<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+	<meta http-equiv="Content-Type" content="text/html; charset=utf8">
+	<title><spring:message code="label.title" /></title>
+</head>
+<body>
+
+<a href="<c:url value="/index" />">
+	<spring:message code="label.contacts" />
+</a><br/>
+
+<c:if test="${not empty param.error}">
+	<font color="red"> <spring:message code="label.loginerror" />
+	: ${sessionScope["SPRING_SECURITY_LAST_EXCEPTION"].message} </font>
+</c:if>
+<form method="POST" action="<c:url value="/j_spring_security_check" />">
+<table>
+	<tr>
+		<td align="right"><spring:message code="label.login" /></td>
+		<td><input type="text" name="j_username" /></td>
+	</tr>
+	<tr>
+		<td align="right"><spring:message code="label.password" /></td>
+		<td><input type="password" name="j_password" /></td>
+	</tr>
+	<tr>
+		<td align="right"><spring:message code="label.remember" /></td>
+		<td><input type="checkbox" name="_spring_security_remember_me" /></td>
+	</tr>
+	<tr>
+		<td colspan="2" align="right"><input type="submit" value="Login" />
+		<input type="reset" value="Reset" /></td>
+	</tr>
+</table>
+</form>
+</body>
+</html>
\ No newline at end of file
Index: .settings/org.eclipse.core.resources.prefs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.eclipse.core.resources.prefs	(revision )
+++ .settings/org.eclipse.core.resources.prefs	(revision )
@@ -0,0 +1,3 @@
+#Wed Jan 05 09:33:37 EET 2011
+eclipse.preferences.version=1
+encoding//src/main/resources/messages_ru.properties=UTF-8
Index: .idea/libraries/Maven__org_springframework_spring_tx_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_tx_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_tx_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-tx:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_servlet_servlet_api_2_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__javax_servlet_servlet_api_2_5.xml	(revision )
+++ .idea/libraries/Maven__javax_servlet_servlet_api_2_5.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.servlet:servlet-api:2.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/servlet-api/2.5/servlet-api-2.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/servlet-api/2.5/servlet-api-2.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/service/TournamentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/TournamentService.java	(revision )
+++ src/main/java/net/pss/beck/service/TournamentService.java	(revision )
@@ -0,0 +1,17 @@
+package net.pss.beck.service;
+
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.Tournament;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+public interface TournamentService {
+    public void addTournament(Tournament tournament);
+    public List<Tournament> getListTournaments();
+    public Tournament getTournamentById(Integer id);
+    public List<Team> getTeamsFromTournament(Integer id);
+    public void addTeamsInTournament(Tournament tournament, List<Team> teamsAdd);
+}
Index: .idea/libraries/Maven__junit_junit_4_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__junit_junit_4_7.xml	(revision )
+++ .idea/libraries/Maven__junit_junit_4_7.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: junit:junit:4.7">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.7/junit-4.7.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.7/junit-4.7-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.7/junit-4.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(revision )
+++ .idea/uiDesigner.xml	(revision )
@@ -0,0 +1,125 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
+
Index: src/main/java/net/pss/beck/service/MatchesService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/MatchesService.java	(revision )
+++ src/main/java/net/pss/beck/service/MatchesService.java	(revision )
@@ -0,0 +1,10 @@
+package net.pss.beck.service;
+
+import net.pss.beck.domain.Matches;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+public interface MatchesService {
+    public void addMatches(Matches matches);
+}
Index: src/main/webapp/WEB-INF/views/index.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/views/index.jsp	(revision )
+++ src/main/webapp/WEB-INF/views/index.jsp	(revision )
@@ -0,0 +1,19 @@
+<%--
+  Created by IntelliJ IDEA.
+  User: amyalenkov
+  Date: 05.01.14
+  Time: 21:41
+  To change this template use File | Settings | File Templates.
+--%>
+<%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<html>
+<head>
+    <title></title>
+    <form method="post" action="save_all_tours">
+        <input type="submit" value="All_tour_save">
+    </form>
+</head>
+<body>
+
+</body>
+</html>
Index: .idea/libraries/Maven__org_slf4j_slf4j_log4j12_1_5_10.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_slf4j_slf4j_log4j12_1_5_10.xml	(revision )
+++ .idea/libraries/Maven__org_slf4j_slf4j_log4j12_1_5_10.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-log4j12:1.5.10">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.name	(revision )
+++ .idea/.name	(revision )
@@ -0,0 +1,1 @@
+contactmanager
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_slf4j_api_1_5_10.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_slf4j_slf4j_api_1_5_10.xml	(revision )
+++ .idea/libraries/Maven__org_slf4j_slf4j_api_1_5_10.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-api:1.5.10">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/web/ContactController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/web/ContactController.java	(revision )
+++ src/main/java/net/pss/beck/web/ContactController.java	(revision )
@@ -0,0 +1,358 @@
+package net.pss.beck.web;
+
+import com.fasterxml.jackson.core.JsonProcessingException;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import net.pss.beck.domain.*;
+import net.pss.beck.domain.json.JSender;
+import net.pss.beck.domain.json.JTeam;
+import net.pss.beck.parser.ParserServiceImpl;
+import net.pss.beck.service.*;
+import net.pss.beck.updater.UpdatePlayersInTeamImpl;
+import net.pss.beck.updater.UpdateTeamsImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.*;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+@Controller
+public class ContactController {
+
+    @Autowired
+    private ContactService contactService;
+
+    @Autowired
+    private TournamentService tournamentService;
+
+    @Autowired
+    private PlayerService playerService;
+
+    @Autowired
+    private TeamService teamService;
+
+    @Autowired
+    private RefereeService refereeService;
+
+    @Autowired
+    private MatchesService matchesService;
+
+    @Autowired
+    private PlayersInTeamsService playersInTeamsService;
+
+    @Autowired
+    private TeamsInTournamentService teamsInTournamentService;
+
+//	@RequestMapping("/index")
+//	public String listTours(Map<String, Object> map) {
+//
+//		map.put("contact", new Contact());
+//		map.put("contactList", contactService.listContact());
+//
+//		return "contact";
+//	}
+
+    @RequestMapping("/index")
+    public String listTours(Model model) {
+        model.addAttribute("tours", tournamentService.getListTournaments());
+        List<Team> teams = new ArrayList<Team>();
+
+
+        model.addAttribute("teams", teams);
+        return "review";
+    }
+
+    @RequestMapping(value = "/choiseTour", method = RequestMethod.GET)
+    public
+    @ResponseBody
+    String getTeamsInTour(@RequestParam String id) throws JsonProcessingException {
+        System.out.println("tourname " + id);
+        List<Team> teams = tournamentService.getTeamsFromTournament(Integer.valueOf(id));
+        List<JTeam> jTeams = new ArrayList<JTeam>();
+        for(Team team : teams){
+            jTeams.add(new JTeam(team.getId(),team.getName(),team.getCounrty()));
+        }
+        ObjectMapper mapper = new ObjectMapper();
+        return mapper.writeValueAsString(jTeams);
+    }
+
+    @RequestMapping(value = "/updateTeams", method = RequestMethod.GET)
+    public void updateTeamsInTour(@RequestParam Integer id) throws IOException {
+        Tournament tournament = tournamentService.getTournamentById(id);
+        UpdateTeamsImpl updateTeams = new UpdateTeamsImpl(tournament);
+
+        List<Team> allTeams = teamService.getListTeams();
+        for (Team team : updateTeams.getNewTeamsForAdd(allTeams)){
+            System.out.println("create "+team.getName());
+            teamService.addTeam(team);
+        }
+
+        List<Team> teamsOld = tournamentService.getTeamsFromTournament(id);
+        for(Team team : updateTeams.getTeamsForDeleteFromTournament(teamsOld)){
+            System.out.println("delete " + team.getName());
+            teamsInTournamentService.deleteTeamInTournament(
+                    teamsInTournamentService.getTeamInTournament(team, tournament));
+        }
+
+        for(String teamName : updateTeams.getTeamNamesForAddInTournament(teamsOld)){
+            Team team = teamService.getTeamByName(teamName);
+            System.out.println("add "+team.getName()+" in tour "+tournament.getName());
+            TeamsInTournament teamsInTournament = new TeamsInTournament();
+            teamsInTournament.setTeam(team);
+            teamsInTournament.setTournament(tournament);
+            teamsInTournamentService.addTeamInTournament(teamsInTournament);
+
+        }
+    }
+
+    @RequestMapping(value = "/updatePlayersInTeam", method = RequestMethod.GET)
+    public void updatePlayersInTeam(@RequestParam String teamName) throws IOException {
+        System.out.println("teamName "+teamName);
+        Team team = teamService.getTeamByName(teamName);
+        Tournament tournament = teamsInTournamentService.getTournamentsByTeam(team).get(0);
+        UpdatePlayersInTeamImpl updatePlayersInTeam = new UpdatePlayersInTeamImpl(team,tournament);
+
+        for(Player player : updatePlayersInTeam.getNewPlayersForAdd(playerService.getPlayers())){
+            System.out.println("create "+player.getLastName());
+            playerService.addPlayer(player);
+        }
+
+        List<Player> playersInTeamOld = playersInTeamsService.getPlayersByTeam(team);
+        for(Player player : updatePlayersInTeam.getPlayersForDeleteInTeam(playersInTeamOld)){
+            System.out.println("delete "+player.getId());
+            for(PlayersInTeams playersInTeams : playersInTeamsService.getPlayersInTeam(team)){
+                if(playersInTeams.getPlayer().getId().equals(player.getId())){
+                    playersInTeamsService.deletePlayerInTeam(playersInTeams);
+                }
+            }
+        }
+
+
+        Map<String,Player> numberPlayerNew = updatePlayersInTeam.getNewPlayersForAddInTeam(playersInTeamOld);
+        for(String number : numberPlayerNew.keySet()){
+            System.out.println("add "+number+ " in team "+team.getName());
+            PlayersInTeams playersInTeams = new PlayersInTeams();
+            playersInTeams.setNumber(number);
+            playersInTeams.setTeam(team);
+            playersInTeams.setPlayer(playerService.getPlayerByLastNameAndData(
+                numberPlayerNew.get(number).getLastName(),numberPlayerNew.get(number).getData()));
+            playersInTeamsService.addPlayerInTeam(playersInTeams);
+        }
+
+        Map<String,Player> numberPlayer = new HashMap<String, Player>();
+        for(PlayersInTeams playersInTeams : playersInTeamsService.getPlayersInTeam(team)){
+            Player player = playerService.getPlayerById(playersInTeams.getPlayer().getId());
+            numberPlayer.put(playersInTeams.getNumber(),player);
+        }
+
+        Map<String,Player> numberPlayerUpdate
+                = updatePlayersInTeam.getPlayersForUpdateNumberInTeam(numberPlayer);
+        System.out.println("-- "+numberPlayerUpdate.size());
+        for(String number : numberPlayerUpdate.keySet()){
+            System.out.println("update "+number+ " in team "+team.getName());
+            Player player = playerService.getPlayerByLastNameAndData(
+                    numberPlayerNew.get(number).getLastName(),numberPlayerNew.get(number).getData());
+            PlayersInTeams playersInTeamsUpdate =
+                    playersInTeamsService.getPlayersInTeamByTeamAndPlayer(team, player);
+            playersInTeamsUpdate.setNumber(number);
+
+            playersInTeamsService.addPlayerInTeam(playersInTeamsUpdate);
+        }
+
+    }
+
+    @RequestMapping("/teams/{teamId}")
+    public String getTeamInfo(@PathVariable("teamId") Integer teamId, Model model) {
+        Team team = teamService.getTeamById(teamId);
+        model.addAttribute("team",team);
+        model.addAttribute("players", playersInTeamsService.getPlayersInTeam(team));
+        return "teams";
+    }
+
+    @RequestMapping("/")
+    public String home() {
+        return "redirect:/index";
+    }
+
+    @RequestMapping(value = "/add", method = RequestMethod.POST)
+    public String addContact(@ModelAttribute("contact") Contact contact,
+                             BindingResult result) {
+
+        contactService.addContact(contact);
+
+        return "redirect:/index";
+    }
+
+    @RequestMapping("/delete/{contactId}")
+    public String deleteContact(@PathVariable("contactId") Integer contactId) {
+
+        contactService.removeContact(contactId);
+
+        return "redirect:/index";
+    }
+
+    @RequestMapping(value = "/json", method = RequestMethod.POST)
+    @ResponseBody
+    public String check(@RequestBody String markers) throws IOException {
+        ObjectMapper mapper = new ObjectMapper();
+        JSender sender = mapper.readValue(markers, JSender.class);
+
+        return "Hello";
+    }
+
+    @RequestMapping(value = "/save_all_tours", method = RequestMethod.POST)
+    public String saveTours() {
+//        Tournament tournament = new Tournament();
+//        tournament.setName("Wyschejschaja Liha");
+//        tournament.setData("2013");
+//        tournamentService.addTournament(tournament);
+        Tournament tournament = tournamentService.getListTournaments().get(0);
+        System.out.println(tournament.getName());
+//        List<Team> teams = teamService.getListTeams();
+//        tournament.setTeams(teams);
+//        tournamentService.addTournament(tournament);
+        return "redirect:/index";
+    }
+
+    @RequestMapping(value = "/save_teams", method = RequestMethod.POST)
+    public String saveTeams() throws IOException {
+        Tournament tournament = new Tournament();
+        tournament.setName("Wyschejschaja Liha");
+        ParserServiceImpl parserService = new ParserServiceImpl();
+        for (Team team : parserService.getAllTeams(tournament)) {
+            List<Player> players = parserService.getAllPlayersOfTeam(team, tournament);
+            for (Player player : players) {
+                playerService.addPlayer(player);
+            }
+//            team.setPlayers(players);
+            teamService.addTeam(team);
+        }
+
+        return "redirect:/index";
+    }
+
+    @RequestMapping(value = "/save_player", method = RequestMethod.GET)
+    public String savePlayer() throws IOException {
+        Tournament tournament = tournamentService.getTournamentById(2);
+        System.out.println(tournament.getName());
+//        List<Team> teams = tournament.getTeams();
+        List<Team> teams = tournamentService.getTeamsFromTournament(2);
+        for (Team team : teams) {
+            System.out.println(team.getName());
+        }
+//        tournament.setName("Wyschejschaja Liha");
+//        Team team = new Team();
+//        team.setName("FK Gomel");
+//        Player player = new Player();
+//        player.setLastName("sdf");
+//        player.setNumber("7");
+//        List<Player> players = new ArrayList<Player>();
+//        players.add(player);
+//        team.setPlayers(players);
+//        teamService.addTeam(team);
+//        player.setTeam(team);
+//        playerService.addPlayer(player);
+//        ParserServiceImpl parserService = new ParserServiceImpl();
+//        for(Player player : parserService.getAllPlayersOfTeam(team, tournament)){
+//            playerService.addPlayer(player);
+//        }
+        return "redirect:/index";
+
+
+    }
+
+    @RequestMapping(value = "/checkPlay", method = RequestMethod.POST)
+    public String Test() throws IOException {
+        List<PlayersInTeams> playersInTeamses = playersInTeamsService.getPlayersInTeams();
+        System.out.println("size " + playersInTeamses.size());
+        Team team = new Team();
+        team.setId(1);
+        List<PlayersInTeams> playersInTeamses1 = playersInTeamsService.getPlayersInTeam(team);
+        System.out.println("size1 " + playersInTeamses1.size());
+//        System.out.println("name "+playersInTeamses1.get(0).get);
+        Player player = playersInTeamses1.get(0).getPlayer();
+        Team team1 = playersInTeamses1.get(0).getTeam();
+        System.out.println("namePL " + player.getLastName());
+        System.out.println("nameT " + team1.getName());
+
+        playersInTeamsService.deletePlayerInTeam(playersInTeamses.get(0));
+
+        return "redirect:/index";
+    }
+
+    @RequestMapping(value = "/check", method = RequestMethod.GET)
+    public String TestHand() throws IOException {
+        Tournament tournament = new Tournament();
+        PlayersInTeams playersInTeams1 = new PlayersInTeams();
+        PlayersInTeams playersInTeams2 = new PlayersInTeams();
+        Team team1 = new Team();
+        Team team2 = new Team();
+        Player player1 = new Player();
+        Player player2 = new Player();
+        Referee referee = new Referee();
+        Matches matches = new Matches();
+        List<Player> players1 = new ArrayList<Player>();
+        List<Player> players2 = new ArrayList<Player>();
+        List<Team> teams = new ArrayList<Team>();
+        tournament.setName("Wyschejschaja Liha");
+        tournament.setData("2013");
+        team1.setName("FK Gomel");
+        team1.setCounrty("BLR");
+        team2.setName("BATE");
+        team2.setCounrty("BLR");
+        teams.add(team1);
+        teams.add(team2);
+        player1.setCounrty("BLR");
+        player1.setData("12332");
+        player1.setFirstName("FN1");
+        player1.setLastName("LN1");
+        player2.setCounrty("BLR");
+        player2.setData("1233122");
+        player2.setFirstName("FN2");
+        player2.setLastName("LN2");
+        players1.add(player1);
+        players2.add(player2);
+        referee.setCounrty("dsd");
+        referee.setData("dsd");
+        referee.setFirstName("FN");
+        referee.setLastName("LN");
+//        team1.setPlayers(players1);
+//        team2.setPlayers(players2);
+//        tournament.setTeams(teams);
+        matches.setData("122121");
+        matches.setStage("final");
+        matches.setTeam1(team1);
+        matches.setTeam2(team2);
+        matches.setReferee(referee);
+        matches.setTournament(tournament);
+
+        playersInTeams1.setNumber("15");
+        playersInTeams1.setPlayer(player1);
+        playersInTeams1.setTeam(team1);
+        playersInTeams2.setNumber("12");
+        playersInTeams2.setPlayer(player2);
+        playersInTeams2.setTeam(team2);
+
+
+        teamService.addTeam(team1);
+        teamService.addTeam(team2);
+
+        tournamentService.addTournament(tournament);
+        playerService.addPlayer(player1);
+        playerService.addPlayer(player2);
+
+        refereeService.addTeam(referee);
+        matchesService.addMatches(matches);
+
+        playersInTeamsService.addPlayerInTeam(playersInTeams1);
+        playersInTeamsService.addPlayerInTeam(playersInTeams2);
+
+        return "redirect:/index";
+    }
+
+}
Index: src/main/java/net/pss/beck/dao/RefereeDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/RefereeDAOImpl.java	(revision )
+++ src/main/java/net/pss/beck/dao/RefereeDAOImpl.java	(revision )
@@ -0,0 +1,21 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Referee;
+import org.hibernate.SessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Repository
+public class RefereeDAOImpl implements RefereeDAO {
+
+    @Autowired
+    private SessionFactory sessionFactory;
+
+    @Override
+    public void addReferee(Referee referee) {
+        sessionFactory.getCurrentSession().saveOrUpdate(referee);
+    }
+}
Index: .settings/org.eclipse.wst.validation.prefs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.eclipse.wst.validation.prefs	(revision )
+++ .settings/org.eclipse.wst.validation.prefs	(revision )
@@ -0,0 +1,6 @@
+#Fri Jun 06 17:00:12 BST 2008
+DELEGATES_PREFERENCE=delegateValidatorListorg.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator\=org.eclipse.wst.wsdl.validation.internal.eclipse.Validator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator\=org.eclipse.wst.xsd.core.internal.validation.eclipse.Validator;
+USER_BUILD_PREFERENCE=enabledBuildValidatorListorg.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator;org.eclipse.jst.jsf.validation.internal.JSPSemanticsValidator;org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator;org.eclipse.wst.xml.core.internal.validation.eclipse.Validator;org.eclipse.wst.common.componentcore.internal.ModuleCoreValidator;org.eclipse.jst.jsf.validation.internal.appconfig.AppConfigValidator;org.eclipse.jst.jsp.core.internal.validation.JSPBatchValidator;org.eclipse.wst.html.internal.validation.HTMLValidator;org.eclipse.jst.jsp.core.internal.validation.JSPContentValidator;org.eclipse.jst.j2ee.internal.classpathdep.ClasspathDependencyValidator;org.eclipse.wst.wsi.ui.internal.WSIMessageValidator;
+USER_MANUAL_PREFERENCE=enabledManualValidatorListorg.eclipse.wst.wsdl.validation.internal.eclipse.WSDLDelegatingValidator;org.eclipse.wst.xsd.core.internal.validation.eclipse.XSDDelegatingValidator;org.eclipse.jst.jsf.validation.internal.JSPSemanticsValidator;org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator;org.eclipse.wst.xml.core.internal.validation.eclipse.Validator;org.eclipse.wst.common.componentcore.internal.ModuleCoreValidator;org.eclipse.jst.jsf.validation.internal.appconfig.AppConfigValidator;org.eclipse.jst.jsp.core.internal.validation.JSPBatchValidator;org.eclipse.wst.html.internal.validation.HTMLValidator;org.eclipse.jst.jsp.core.internal.validation.JSPContentValidator;org.eclipse.jst.j2ee.internal.classpathdep.ClasspathDependencyValidator;org.eclipse.wst.wsi.ui.internal.WSIMessageValidator;
+USER_PREFERENCE=overrideGlobalPreferencesfalse
+eclipse.preferences.version=1
Index: .idea/libraries/Maven__org_springframework_spring_webmvc_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_webmvc_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_webmvc_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-webmvc:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/spring/root-context.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/spring/root-context.xml	(revision )
+++ src/main/webapp/WEB-INF/spring/root-context.xml	(revision )
@@ -0,0 +1,31 @@
+<?xml  version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
+	xmlns:context="http://www.springframework.org/schema/context"
+	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
+	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
+	xmlns:util="http://www.springframework.org/schema/util"
+	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
+        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
+        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
+        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
+        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
+
+	<!-- Root Context: определяет ресурсы, доступные всему приложению, всем сервлетам -->
+	
+	<!-- Включаем опцию использования конфигурационных аннотаций (@Annotation-based configuration)-->
+	<context:annotation-config />
+
+	<!-- Определяем папки, в которых будем автоматически искать бины-компоненты (@Component, @Service)  -->
+	<context:component-scan base-package="net.pss.beck.dao" />
+	<context:component-scan base-package="net.pss.beck.service" />
+
+	<!-- Файл с настройками ресурсов для работы с данными (Data Access Resources) -->
+	<import resource="data.xml" />
+				
+	<!-- Файл с настройками безопасности -->
+	<import resource="security.xml" />
+
+</beans>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_servlet_jstl_1_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__javax_servlet_jstl_1_2.xml	(revision )
+++ .idea/libraries/Maven__javax_servlet_jstl_1_2.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.servlet:jstl:1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/jstl/1.2/jstl-1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/jstl/1.2/jstl-1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/jstl/1.2/jstl-1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_2_2.xml	(revision )
+++ .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_2_2.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-core:2.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.2.2/jackson-core-2.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.2.2/jackson-core-2.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.2.2/jackson-core-2.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision )
+++ .idea/encodings.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding" useUTFGuessing="true" native2AsciiForPropertiesFiles="false" />
+</project>
+
Index: src/main/webapp/WEB-INF/views/contact.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/views/contact.jsp	(revision )
+++ src/main/webapp/WEB-INF/views/contact.jsp	(revision )
@@ -0,0 +1,79 @@
+<%@ page language="java" contentType="text/html; charset=utf8"
+	pageEncoding="utf8"%>
+<%@taglib uri="http://www.springframework.org/tags" prefix="spring"%>
+<%@taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
+<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+	<meta http-equiv="Content-Type" content="text/html; charset=utf8">
+	<title><spring:message code="label.title" /></title>
+</head>
+<body>
+
+<a href="<c:url value="/logout" />">
+	<spring:message code="label.logout" />
+</a>
+  
+<h2><spring:message code="label.title" /></h2>
+
+<form:form method="post" action="add" commandName="contact">
+
+	<table>
+		<tr>
+			<td><form:label path="firstname">
+				<spring:message code="label.firstname" />
+			</form:label></td>
+			<td><form:input path="firstname" /></td>
+		</tr>
+		<tr>
+			<td><form:label path="lastname">
+				<spring:message code="label.lastname" />
+			</form:label></td>
+			<td><form:input path="lastname" /></td>
+		</tr>
+		<tr>
+			<td><form:label path="email">
+				<spring:message code="label.email" />
+			</form:label></td>
+			<td><form:input path="email" /></td>
+		</tr>
+		<tr>
+			<td><form:label path="telephone">
+				<spring:message code="label.telephone" />
+			</form:label></td>
+			<td><form:input path="telephone" /></td>
+		</tr>
+		<tr>
+			<td colspan="2"><input type="submit"
+				value="<spring:message code="label.addcontact"/>" /></td>
+		</tr>
+	</table>
+</form:form>
+
+<h3><spring:message code="label.contacts" /></h3>
+<c:if test="${!empty contactList}">
+	<table class="data">
+		<tr>
+			<th><spring:message code="label.firstname" /></th>
+			<th><spring:message code="label.email" /></th>
+			<th><spring:message code="label.telephone" /></th>
+			<th>&nbsp;</th>
+		</tr>
+		<c:forEach items="${contactList}" var="contact">
+			<tr>
+				<td>${contact.lastname}, ${contact.firstname}</td>
+				<td>${contact.email}</td>
+				<td>${contact.telephone}</td>
+				<td><a href="delete/${contact.id}"><spring:message code="label.delete" /></a></td>
+			</tr>
+		</c:forEach>
+	</table>
+</c:if>
+
+<form method="post" action="save_all_tours">
+    <input type="submit" value="All_tour_save">
+</form>
+
+</body>
+</html>
\ No newline at end of file
Index: src/main/java/net/pss/beck/parser/TestTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/parser/TestTest.java	(revision )
+++ src/main/java/net/pss/beck/parser/TestTest.java	(revision )
@@ -0,0 +1,121 @@
+package net.pss.beck.parser;
+
+import net.pss.beck.domain.Player;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+import org.junit.Test;
+
+import java.io.IOException;
+
+/**
+ * Created by amyalenkov on 04.01.14.
+ */
+public class TestTest {
+
+    @Test
+    public void testSoccerWay() throws IOException {
+        String country = "Belarus";
+        String url = "http://int.soccerway.com";
+        String urlAdd = "";
+        Document doc = Jsoup.connect("http://int.soccerway.com/competitions/?ICID=TN_03").get();
+        Elements links = doc.getElementsByClass("expandable").tagName("a");
+        for(Element link : links) {
+//            System.out.println(link.text());
+            if(country.equals(link.text())){
+                urlAdd = link.getElementsByAttribute("href").attr("href");
+                System.out.println("url add "+urlAdd);
+            }
+        }
+
+        Document doc1 = Jsoup.connect(url+urlAdd).get();
+        Elements links1 = doc1.getElementsByClass("left-tree").tagName("a");
+        for(Element link : links1) {
+            for(Element elem : link.getElementsByAttribute("title")) {
+                System.out.println(elem.tagName("a").text());
+            }
+        }
+    }
+
+    @Test
+    public void testTransferMarket() throws IOException {
+        String url_de = "http://www.transfermarkt.de";
+        String url_en = "http://www.transfermarkt.de/en";
+        String euroCamps = "/europa/europa/wettbewerbe.html";
+        String nameTour = "Wyschejschaja Liha";
+        String team = "FK Gomel";
+        String nameTourUrl = "";
+        String teamUrl = "";
+        Document doc = getDoc(url_en+euroCamps);
+        Elements links = doc.getElementsByClass("al").tagName("a");
+        for(Element link : links) {
+            if(link.text().equals(nameTour)){
+                nameTourUrl = link.getElementsByAttribute("href").attr("href");
+            }
+        }
+
+        Document doc1 = getDoc(url_de+nameTourUrl);
+        Elements links1 = doc1.getElementsByAttributeValue("id","vereine").get(0).getElementsByAttributeValue("class","s10");
+        for(Element link : links1){
+            //todo убрать последний элемент, это не команда
+//            System.out.println(link.attr("title"));
+            if(link.attr("title").equals(team)){
+                teamUrl = link.attr("href");
+            }
+        }
+
+        Document doc3 = getDoc(url_de+teamUrl);
+        Elements links4 = doc3.getElementsByAttributeValue("id","spieler").get(0).getElementsByAttributeValue("class","hell");
+        Elements links5 = doc3.getElementsByAttributeValue("id","spieler").get(0).getElementsByAttributeValue("class","dunkel");
+        for(Element element : links4){
+            System.out.println(element.getElementsByAttribute("src").get(0).attr("title"));
+            System.out.println(element.getElementsByAttribute("href").get(0).attr("title"));
+            getPlayer(url_de+element.getElementsByAttribute("href").get(0).attr("href"));
+            System.out.println("--------");
+        }
+        for(Element element : links5){
+            System.out.println(element.getElementsByAttribute("src").get(0).attr("title"));
+            System.out.println(element.getElementsByAttribute("href").get(0).attr("title"));
+            getPlayer(url_de+element.getElementsByAttribute("href").get(0).attr("href"));
+            System.out.println("--------");
+        }
+    }
+
+    public void getPlayer(String urlPlayer) throws IOException {
+        Document doc = getDoc(urlPlayer);
+        Elements links = doc.getElementsByAttributeValue("class","tabelle_spieler s10");
+        for(Element link : links) {
+            //todo обработка по дате
+            System.out.println(link.getElementsByAttributeValue("class","s10").text());
+            System.out.println(link.getElementsByAttributeValue("class", "country-name s10").text());
+        }
+    }
+
+    public Document getDoc(String url) throws IOException {
+        return Jsoup.connect(url).
+                userAgent("Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.110 Safari/537.36")
+                .timeout(0).followRedirects(true).execute().parse();
+    }
+
+    @Test
+    public void testHelpParserTeams() throws IOException {
+        String nameTour = "Wyschejschaja Liha";
+        ParserHelper parserHelper = new ParserHelper();
+        parserHelper.getAllTeamsInTour(nameTour);
+    }
+
+    @Test
+    public void testHelpParserPlayers() throws IOException {
+        String nameTour = "Wyschejschaja Liha";
+        String nameTeam = "BATE Borisov";
+        ParserHelper parserHelper = new ParserHelper();
+        for(Player player : parserHelper.getPlayersOfTeam(nameTeam,nameTour)){
+            System.out.println(player.getCounrty());
+            System.out.println(player.getData());
+            System.out.println(player.getFirstName());
+            System.out.println(player.getLastName());
+        }
+    }
+
+}
Index: src/main/java/net/pss/beck/domain/Team.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/Team.java	(revision )
+++ src/main/java/net/pss/beck/domain/Team.java	(revision )
@@ -0,0 +1,94 @@
+package net.pss.beck.domain;
+
+import javax.persistence.*;
+import java.io.Serializable;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Entity
+@Table(name = "TEAMS")
+public class Team implements Serializable {
+
+    @Id
+    @Column(name = "ID_TEAM")
+    @GeneratedValue
+    private Integer id;
+
+    @Column(name = "NAME")
+    private String name;
+
+    @Column(name = "COUNTRY")
+    private String counrty;
+
+    @OneToMany(fetch = FetchType.LAZY, mappedBy = "team")
+    private List<TeamsInTournament> tournaments;
+
+    @OneToMany(fetch = FetchType.EAGER, mappedBy = "team")
+    private List<PlayersInTeams> players;
+
+
+    @OneToMany(fetch = FetchType.LAZY, mappedBy = "team1")
+    private List<Matches> matchesListHome;
+
+    @OneToMany(fetch = FetchType.LAZY, mappedBy = "team2")
+    private List<Matches> matchesListAway;
+
+    public String getCounrty() {
+        return counrty;
+    }
+
+    public void setCounrty(String counrty) {
+        this.counrty = counrty;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    public List<Matches> getMatchesListAway() {
+        return matchesListAway;
+    }
+
+    public void setMatchesListAway(List<Matches> matchesListAway) {
+        this.matchesListAway = matchesListAway;
+    }
+
+    public List<Matches> getMatchesListHome() {
+        return matchesListHome;
+    }
+
+    public void setMatchesListHome(List<Matches> matchesListHome) {
+        this.matchesListHome = matchesListHome;
+    }
+
+    public List<PlayersInTeams> getPlayers() {
+        return players;
+    }
+
+    public void setPlayers(List<PlayersInTeams> teams) {
+        this.players = teams;
+    }
+
+
+    public List<TeamsInTournament> getTournaments() {
+        return tournaments;
+    }
+
+    public void setTournaments(List<TeamsInTournament> tournaments) {
+        this.tournaments = tournaments;
+    }
+}
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/beck.iml" filepath="$PROJECT_DIR$/beck.iml" />
+    </modules>
+  </component>
+</project>
+
Index: src/main/webapp/WEB-INF/jdbc.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jdbc.properties	(revision )
+++ src/main/webapp/WEB-INF/jdbc.properties	(revision )
@@ -0,0 +1,5 @@
+jdbc.driverClassName= com.mysql.jdbc.Driver
+jdbc.dialect=org.hibernate.dialect.MySQLDialect
+jdbc.databaseurl=jdbc:mysql://localhost:3306/contactmanager
+jdbc.username=root
+jdbc.password=2102
\ No newline at end of file
Index: src/main/java/net/pss/beck/domain/PlayersInTeams.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/PlayersInTeams.java	(revision )
+++ src/main/java/net/pss/beck/domain/PlayersInTeams.java	(revision )
@@ -0,0 +1,51 @@
+package net.pss.beck.domain;
+
+import javax.persistence.*;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Entity
+@Table(name = "PLAYERS_IN_TEAMS")
+public class PlayersInTeams {
+
+    @Id
+    @Column(name = "ID")
+    @GeneratedValue
+    private Integer id;
+
+    @Column(name = "NUMBER")
+    private String number;
+
+    @ManyToOne(fetch = FetchType.EAGER)
+    @JoinColumn(name = "ID_TEAM")
+    private Team team;
+
+    @ManyToOne(fetch = FetchType.EAGER)
+    @JoinColumn(name = "ID_PLAYER")
+    private Player player;
+
+    public Team getTeam() {
+        return team;
+    }
+
+    public void setTeam(Team team) {
+        this.team = team;
+    }
+
+    public Player getPlayer() {
+        return player;
+    }
+
+    public void setPlayer(Player player) {
+        this.player = player;
+    }
+
+    public String getNumber() {
+        return number;
+    }
+
+    public void setNumber(String number) {
+        this.number = number;
+    }
+}
Index: .idea/libraries/Maven__org_springframework_spring_jdbc_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_jdbc_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_jdbc_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jdbc:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_servlet_jsp_jsp_api_2_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__javax_servlet_jsp_jsp_api_2_1.xml	(revision )
+++ .idea/libraries/Maven__javax_servlet_jsp_jsp_api_2_1.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.servlet.jsp:jsp-api:2.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_2_2.xml	(revision )
+++ .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_2_2.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-databind:2.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.2.2/jackson-databind-2.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.2.2/jackson-databind-2.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.2.2/jackson-databind-2.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/spring/data.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/spring/data.xml	(revision )
+++ src/main/webapp/WEB-INF/spring/data.xml	(revision )
@@ -0,0 +1,65 @@
+<?xml  version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
+	xmlns:context="http://www.springframework.org/schema/context"
+	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
+	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
+	xmlns:util="http://www.springframework.org/schema/util"
+	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
+        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
+        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
+        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
+        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
+
+	<!-- Настраивает управление транзакциями с помощью аннотации @Transactional -->
+	<tx:annotation-driven transaction-manager="transactionManager" />
+
+	<!-- Менеджер транзакций -->
+	<bean id="transactionManager"
+		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
+		<property name="sessionFactory" ref="sessionFactory" />
+	</bean>
+
+	<bean id="messageSource"
+		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
+		<property name="basename" value="classpath:messages" />
+		<property name="defaultEncoding" value="UTF-8" />
+	</bean>
+
+	<!-- Настройки бина dataSource будем хранить в отдельном файле -->
+	<bean id="propertyConfigurer"
+		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
+		p:location="/WEB-INF/jdbc.properties" />
+
+	<!-- Непосредственно бин dataSource -->
+	<bean id="dataSource"
+		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
+		p:driverClassName="${jdbc.driverClassName}" 
+		p:url="${jdbc.databaseurl}"
+		p:username="${jdbc.username}" 
+		p:password="${jdbc.password}" />
+
+	<!-- Настройки фабрики сессий Хибернейта -->
+	<bean id="sessionFactory"
+		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
+		<property name="dataSource" ref="dataSource" />
+		<property name="configLocation">
+			<value>classpath:hibernate.cfg.xml</value>
+		</property>
+		<property name="configurationClass">
+			<value>org.hibernate.cfg.AnnotationConfiguration</value>
+		</property>
+        <property name="schemaUpdate" value="true"/>
+
+        <property name="hibernateProperties">
+			<props>
+				<prop key="hibernate.show_sql">true</prop>
+				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
+				<prop key="hibernate.connection.charSet">UTF-8</prop>
+			</props>
+		</property>
+	</bean>
+
+
+</beans>
\ No newline at end of file
Index: src/main/java/net/pss/beck/dao/TeamsInTournamentDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/TeamsInTournamentDAO.java	(revision )
+++ src/main/java/net/pss/beck/dao/TeamsInTournamentDAO.java	(revision )
@@ -0,0 +1,19 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.TeamsInTournament;
+import net.pss.beck.domain.Tournament;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+public interface TeamsInTournamentDAO {
+    public void addTeamInTournament(TeamsInTournament teamsInTournament);
+    public void deleteTeamInTournament(TeamsInTournament teamsInTournament);
+    public List<TeamsInTournament> getAllTeamsInTournaments();
+    public List<TeamsInTournament> getTeamsInTournament(Tournament tournament);
+    public TeamsInTournament getTeamsInTournament(Team team, Tournament tournament);
+    public List<Tournament> getTournamentsTeamByTeam(Team team);
+}
Index: src/main/java/net/pss/beck/service/PlayersInTeamsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/PlayersInTeamsServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/service/PlayersInTeamsServiceImpl.java	(revision )
@@ -0,0 +1,64 @@
+package net.pss.beck.service;
+
+import net.pss.beck.dao.PlayersInTeamsDAO;
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.PlayersInTeams;
+import net.pss.beck.domain.Team;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Service
+public class PlayersInTeamsServiceImpl implements PlayersInTeamsService {
+
+    @Autowired
+    private PlayersInTeamsDAO playersInTeamsDAO;
+
+    @Override
+    @Transactional
+    public void addPlayerInTeam(PlayersInTeams playersInTeams) {
+        playersInTeamsDAO.addPlayerInTeam(playersInTeams);
+    }
+
+    @Override
+    @Transactional
+    public void deletePlayerInTeam(PlayersInTeams playersInTeams) {
+        playersInTeamsDAO.deletePlayerInTeam(playersInTeams);
+    }
+
+    @Override
+    @Transactional
+    public List<PlayersInTeams> getPlayersInTeams() {
+        return playersInTeamsDAO.getPlayersInTeams();
+    }
+
+    @Override
+    @Transactional
+    public List<PlayersInTeams> getPlayersInTeam(Team team) {
+        return playersInTeamsDAO.getPlayersInTeam(team);
+    }
+
+    @Override
+    @Transactional
+    public List<Player> getPlayersByTeam(Team team){
+        return playersInTeamsDAO.getPlayersByTeam(team);
+    }
+
+    @Override
+    @Transactional
+    public void deletePlayerByIdInTeam(Player player){
+        playersInTeamsDAO.deletePlayerByIdInTeam(player);
+    }
+
+    @Override
+    @Transactional
+    public PlayersInTeams getPlayersInTeamByTeamAndPlayer(Team team, Player player){
+        return playersInTeamsDAO.getPlayersInTeamByTeamAndPlayer(team, player);
+    }
+
+}
Index: .settings/org.eclipse.jdt.core.prefs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.eclipse.jdt.core.prefs	(revision )
+++ .settings/org.eclipse.jdt.core.prefs	(revision )
@@ -0,0 +1,12 @@
+#Tue Mar 17 10:00:21 EDT 2009
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.5
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.5
Index: .idea/libraries/Maven__xml_apis_xml_apis_1_0_b2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__xml_apis_xml_apis_1_0_b2.xml	(revision )
+++ .idea/libraries/Maven__xml_apis_xml_apis_1_0_b2.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: xml-apis:xml-apis:1.0.b2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/domain/json/JSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/json/JSender.java	(revision )
+++ src/main/java/net/pss/beck/domain/json/JSender.java	(revision )
@@ -0,0 +1,43 @@
+package net.pss.beck.domain.json;
+
+import com.fasterxml.jackson.annotation.JsonProperty;
+
+import java.io.Serializable;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 03.01.14.
+ */
+public class JSender implements Serializable{
+    @JsonProperty("info")
+    private JInfo info;
+
+    @JsonProperty("markers")
+    private List<JMarker> markers;
+
+    public JSender(JInfo info, List<JMarker> markers) {
+        this.info = info;
+        this.markers = markers;
+    }
+
+    public JSender(){
+
+    }
+
+    public JInfo getInfo() {
+        return info;
+    }
+
+    public void setInfo(JInfo info) {
+        this.info = info;
+    }
+
+    public List<JMarker> getMarkers() {
+        return markers;
+    }
+
+    public void setMarkers(List<JMarker> markers) {
+        this.markers = markers;
+    }
+
+}
Index: .idea/libraries/Maven__org_springframework_spring_asm_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_asm_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_asm_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-asm:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dataSources.xml	(revision )
+++ .idea/dataSources.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DataSourceManagerImpl" format="xml" hash="896930821">
+    <data-source source="LOCAL" name="MySQL - @localhost" uuid="a378da3d-870e-4fe8-9355-4f2c2c39041d">
+      <driver-ref>mysql</driver-ref>
+      <synchronize>true</synchronize>
+      <jdbc-driver>com.mysql.jdbc.Driver</jdbc-driver>
+      <jdbc-url>jdbc:mysql://localhost:3306</jdbc-url>
+      <user-name>root</user-name>
+      <user-password>df98df9bdf9adf98</user-password>
+      <schema-pattern>*</schema-pattern>
+      <driver-properties>
+        <property name="zeroDateTimeBehavior" value="convertToNull" />
+        <property name="tinyInt1isBit" value="false" />
+      </driver-properties>
+      <libraries />
+    </data-source>
+  </component>
+</project>
+
Index: src/main/java/net/pss/beck/domain/Referee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/Referee.java	(revision )
+++ src/main/java/net/pss/beck/domain/Referee.java	(revision )
@@ -0,0 +1,71 @@
+package net.pss.beck.domain;
+
+import javax.persistence.*;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Entity
+@Table(name = "REFEREES")
+public class Referee {
+    @Id
+    @Column(name = "ID_REFEREE")
+    @GeneratedValue
+    private Integer id;
+
+    @Column(name = "FIRST_NAME")
+    private String firstName;
+
+    @Column(name = "LAST_NAME")
+    private String lastName;
+
+    @Column(name = "DATA")
+    private String data;
+
+    @Column(name = "COUNTRY")
+    private String counrty;
+
+    @OneToMany(fetch = FetchType.EAGER, mappedBy = "referee")
+    private List<Matches> matchesList;
+
+    public List<Matches> getMatchesList() {
+        return matchesList;
+    }
+
+    public void setMatchesList(List<Matches> matchesList) {
+        this.matchesList = matchesList;
+    }
+
+    public String getFirstName() {
+        return firstName;
+    }
+
+    public void setFirstName(String firstName) {
+        this.firstName = firstName;
+    }
+
+    public String getLastName() {
+        return lastName;
+    }
+
+    public void setLastName(String lastName) {
+        this.lastName = lastName;
+    }
+
+    public String getData() {
+        return data;
+    }
+
+    public void setData(String data) {
+        this.data = data;
+    }
+
+    public String getCounrty() {
+        return counrty;
+    }
+
+    public void setCounrty(String counrty) {
+        this.counrty = counrty;
+    }
+}
Index: .settings/com.springsource.server.ide.jdt.core.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/com.springsource.server.ide.jdt.core.xml	(revision )
+++ .settings/com.springsource.server.ide.jdt.core.xml	(revision )
@@ -0,0 +1,2 @@
+<classpath>
+</classpath>
Index: src/main/webapp/WEB-INF/views/review.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/views/review.jsp	(revision )
+++ src/main/webapp/WEB-INF/views/review.jsp	(revision )
@@ -0,0 +1,67 @@
+<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
+<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
+<%@ page import="net.pss.beck.domain.Tournament" %>
+<%--
+  Created by IntelliJ IDEA.
+  User: amyalenkov
+  Date: 07.01.14
+  Time: 21:05
+  To change this template use File | Settings | File Templates.
+--%>
+<%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<html>
+<head>
+    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
+    <script type="text/javascript">
+        $(document).ready(function () {
+            $("#tours").change(function () {
+                var id = $(this).val();
+                var dataString = 'id=' + id;
+                $.getJSON('/choiseTour?'+dataString, function (data) {
+                    $.each(data, function (key, val) {
+                        $('#teams').append(
+                                '<tr>' +
+                                    '<td>'+val.teamId+'</td>' +
+                                    '<td><a href="teams/'+val.teamId+'">'+val.name+'</td>' +
+                                    '<td>'+val.counrty+'</td>' +
+                                '</tr>');
+                    });
+                });
+            });
+            $('#updateTeams').click(function(){
+                var idTour = $("#tours :selected").val();
+                if(idTour != "none"){
+                    $.ajax({
+                        url: "/updateTeams",
+                        type: "GET",
+                        data: "id="+idTour,
+                        success: function(html){
+//                            location.reload();
+                        }
+                    });
+                }
+            });
+
+        });
+    </script>
+    <title></title>
+</head>
+<body>
+<select id="tours">
+    <option value="none">Выберите турнир</option>
+    <c:forEach items="${tours}" var="tour">
+        <option value="${tour.id}">${tour.name} ${tour.data}</option>
+    </c:forEach>
+</select>
+
+<table id="teams">
+    <tr>
+        <td>id</td>
+        <td>country</td>
+        <td>name</td>
+    </tr>
+</table>
+<input type="button" id="updateTeams" value="Обновить команды">
+
+</body>
+</html>
Index: .idea/libraries/Maven__org_springframework_spring_aop_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_aop_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_aop_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-aop:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/domain/json/JTeam.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/json/JTeam.java	(revision )
+++ src/main/java/net/pss/beck/domain/json/JTeam.java	(revision )
@@ -0,0 +1,52 @@
+package net.pss.beck.domain.json;
+
+import com.fasterxml.jackson.annotation.JsonProperty;
+
+/**
+ * Created by amyalenkov on 11.01.14.
+ */
+public class JTeam {
+
+    @JsonProperty("teamId")
+    private Integer id;
+
+    @JsonProperty("name")
+    private String name;
+
+    @JsonProperty("counrty")
+    private String counrty;
+
+    public JTeam(){
+
+    }
+
+    public JTeam(Integer id, String name, String counrty) {
+        this.id = id;
+        this.name = name;
+        this.counrty = counrty;
+    }
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getCounrty() {
+        return counrty;
+    }
+
+    public void setCounrty(String counrty) {
+        this.counrty = counrty;
+    }
+}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
+
Index: .idea/libraries/Maven__org_aspectj_aspectjrt_1_6_9.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_aspectj_aspectjrt_1_6_9.xml	(revision )
+++ .idea/libraries/Maven__org_aspectj_aspectjrt_1_6_9.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.aspectj:aspectjrt:1.6.9">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/service/ContactServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/ContactServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/service/ContactServiceImpl.java	(revision )
@@ -0,0 +1,33 @@
+package net.pss.beck.service;
+ 
+import java.util.List;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+ 
+import net.pss.beck.dao.ContactDAO;
+import net.pss.beck.domain.Contact;
+ 
+@Service
+public class ContactServiceImpl implements ContactService {
+ 
+    @Autowired
+    private ContactDAO contactDAO;
+ 
+    @Transactional
+    public void addContact(Contact contact) {
+        contactDAO.addContact(contact);
+    }
+ 
+    @Transactional
+    public List<Contact> listContact() {
+ 
+        return contactDAO.listContact();
+    }
+ 
+    @Transactional
+    public void removeContact(Integer id) {
+        contactDAO.removeContact(id);
+    }
+}
Index: src/main/java/net/pss/beck/service/RefereeService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/RefereeService.java	(revision )
+++ src/main/java/net/pss/beck/service/RefereeService.java	(revision )
@@ -0,0 +1,11 @@
+package net.pss.beck.service;
+
+import net.pss.beck.domain.Referee;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+public interface RefereeService {
+    public void addTeam(Referee referee);
+
+}
Index: .idea/libraries/Maven__org_hibernate_hibernate_core_3_3_2_GA.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_hibernate_hibernate_core_3_3_2_GA.xml	(revision )
+++ .idea/libraries/Maven__org_hibernate_hibernate_core_3_3_2_GA.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate:hibernate-core:3.3.2.GA">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/3.3.2.GA/hibernate-core-3.3.2.GA.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/3.3.2.GA/hibernate-core-3.3.2.GA-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/3.3.2.GA/hibernate-core-3.3.2.GA-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/updater/UpdatePlayersInTeam.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/updater/UpdatePlayersInTeam.java	(revision )
+++ src/main/java/net/pss/beck/updater/UpdatePlayersInTeam.java	(revision )
@@ -0,0 +1,16 @@
+package net.pss.beck.updater;
+
+import net.pss.beck.domain.Player;
+
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+public interface UpdatePlayersInTeam {
+    public List<Player> getNewPlayersForAdd(List<Player> allPlayers);
+    public Map<String, Player> getNewPlayersForAddInTeam(List<Player> playersOld);
+    public List<Player> getPlayersForDeleteInTeam(List<Player> playersInTeamOld);
+    public Map<String, Player> getPlayersForUpdateNumberInTeam(Map<String, Player> playersInTeamOld);
+}
Index: .idea/libraries/Maven__javax_transaction_jta_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__javax_transaction_jta_1_1.xml	(revision )
+++ .idea/libraries/Maven__javax_transaction_jta_1_1.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.transaction:jta:1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/transaction/jta/1.1/jta-1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/transaction/jta/1.1/jta-1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/transaction/jta/1.1/jta-1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/dao/ContactDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/ContactDAO.java	(revision )
+++ src/main/java/net/pss/beck/dao/ContactDAO.java	(revision )
@@ -0,0 +1,14 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Contact;
+
+import java.util.List;
+
+public interface ContactDAO {
+
+	public void addContact(Contact contact);
+
+	public List<Contact> listContact();
+
+	public void removeContact(Integer id);
+}
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_context_support_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_context_support_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_context_support_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-context-support:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .settings/org.eclipse.wst.common.component
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.eclipse.wst.common.component	(revision )
+++ .settings/org.eclipse.wst.common.component	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project-modules id="moduleCoreId" project-version="1.5.0">
+	<wb-module deploy-name="ContactManager">
+		<wb-resource deploy-path="/" source-path="/src/main/webapp"/>
+		<wb-resource deploy-path="/WEB-INF/classes" source-path="/src/main/java"/>
+		<wb-resource deploy-path="/WEB-INF/classes" source-path="/src/main/resources"/>
+		<property name="java-output-path" value="target/classes"/>
+		<property name="context-root" value="ContactManager"/>
+	</wb-module>
+</project-modules>
Index: src/main/java/net/pss/beck/dao/TeamsInTournamentDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/TeamsInTournamentDAOImpl.java	(revision )
+++ src/main/java/net/pss/beck/dao/TeamsInTournamentDAOImpl.java	(revision )
@@ -0,0 +1,76 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.TeamsInTournament;
+import net.pss.beck.domain.Tournament;
+import org.hibernate.HibernateException;
+import org.hibernate.Session;
+import org.hibernate.SessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+@Repository
+public class TeamsInTournamentDAOImpl implements TeamsInTournamentDAO {
+
+    @Autowired
+    private SessionFactory sessionFactory;
+
+    @Override
+    public void addTeamInTournament(TeamsInTournament teamsInTournament) {
+        sessionFactory.getCurrentSession().saveOrUpdate(teamsInTournament);
+    }
+
+    @Override
+    public void deleteTeamInTournament(TeamsInTournament teamsInTournament) {
+        sessionFactory.getCurrentSession().delete(teamsInTournament);
+    }
+
+    @Override
+    public List<TeamsInTournament> getAllTeamsInTournaments() {
+        return sessionFactory.getCurrentSession().createQuery("from TeamsInTournament ").list();
+    }
+
+    @Override
+    public List<TeamsInTournament> getTeamsInTournament(Tournament tournament) {
+        return sessionFactory.getCurrentSession().
+                createQuery("from TeamsInTournament where tournament.id=" + tournament.getId()).list();
+    }
+
+    @Override
+    public TeamsInTournament getTeamsInTournament(Team team, Tournament tournament) {
+        return (TeamsInTournament) sessionFactory.getCurrentSession().
+            createQuery("from TeamsInTournament where team.id=" + team.getId() +
+                    " and tournament.id=" + tournament.getId()).uniqueResult();
+    }
+
+    public List<Tournament> getTournamentsTeamByTeam(Team team){
+        List<Integer> listIdTours = getSession(sessionFactory).
+             createSQLQuery("select ID_TOURNAMENT from TEAMS_IN_TOURNAMENT where ID_TEAM=" + team.getId()).list();
+        List<Tournament> tours = new ArrayList<Tournament>();
+        for(Integer tourId : listIdTours){
+            tours.add((Tournament) getSession(sessionFactory).
+                    createQuery("from Tournament where id=" + tourId).uniqueResult());
+        }
+        return tours;
+    }
+
+    private Session getSession(SessionFactory sessionFactory){
+        Session session = null;
+        try{
+            session = sessionFactory.getCurrentSession();
+        }catch(HibernateException hex){
+            hex.printStackTrace();
+        }
+        if(session == null && !session.isOpen()){
+            session =  sessionFactory.openSession();
+        }
+        return session;
+    }
+
+}
Index: src/main/java/net/pss/beck/dao/TeamDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/TeamDAOImpl.java	(revision )
+++ src/main/java/net/pss/beck/dao/TeamDAOImpl.java	(revision )
@@ -0,0 +1,74 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+import org.hibernate.HibernateException;
+import org.hibernate.Session;
+import org.hibernate.SessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Repository
+public class TeamDAOImpl implements TeamDAO {
+
+    @Autowired
+    private SessionFactory sessionFactory;
+
+    @Override
+    public void addTeam(Team team) {
+        sessionFactory.getCurrentSession().saveOrUpdate(team);
+    }
+
+    @Override
+    public List<Team> getListTeams() {
+        return sessionFactory.getCurrentSession().createQuery("from Team ").list();
+    }
+
+    public Team getTeamById(Integer id){
+        return (Team) sessionFactory.
+                getCurrentSession().createQuery("from Team where id="+id).uniqueResult();
+    }
+
+    @Override
+    public Map<Player, Integer> getPlayersByTeamId(Integer id){
+        List<Integer> playersId = sessionFactory.getCurrentSession().
+                createSQLQuery("select ID_PLAYER from PLAYERS_IN_TEAMS WHERE ID_TEAM =" + id).list();
+        List<String> numbers = sessionFactory.getCurrentSession().
+                createSQLQuery("select NUMBER from PLAYERS_IN_TEAMS WHERE ID_TEAM =" + id).list();
+
+        Map<Player,Integer> playerNumber = new HashMap<Player, Integer>();
+        int i = 0;
+        for(Integer idPlayer : playersId){
+            playerNumber.put((Player) sessionFactory.getCurrentSession().
+                    createQuery("from Player where id=" + idPlayer).uniqueResult(),
+                    Integer.valueOf(numbers.get(i)));
+            i++;
+        }
+        return playerNumber;
+    }
+
+    public Team getTeamByName(String name){
+        return (Team) getSession(sessionFactory).createQuery("from Team where name='"+name+"'").uniqueResult();
+    }
+
+    private Session getSession(SessionFactory sessionFactory){
+        Session session = null;
+        try{
+            session = sessionFactory.getCurrentSession();
+        }catch(HibernateException hex){
+            hex.printStackTrace();
+        }
+        if(session == null && !session.isOpen()){
+            session =  sessionFactory.openSession();
+        }
+        return session;
+    }
+
+}
Index: .idea/libraries/Maven__org_springframework_spring_beans_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_beans_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_beans_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-beans:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_persistence_persistence_api_1_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__javax_persistence_persistence_api_1_0.xml	(revision )
+++ .idea/libraries/Maven__javax_persistence_persistence_api_1_0.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.persistence:persistence-api:1.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/persistence/persistence-api/1.0/persistence-api-1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/persistence/persistence-api/1.0/persistence-api-1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/copyright/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/copyright/profiles_settings.xml	(revision )
+++ .idea/copyright/profiles_settings.xml	(revision )
@@ -0,0 +1,5 @@
+<component name="CopyrightManager">
+  <settings default="">
+    <module2copyright />
+  </settings>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/service/PlayerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/PlayerService.java	(revision )
+++ src/main/java/net/pss/beck/service/PlayerService.java	(revision )
@@ -0,0 +1,15 @@
+package net.pss.beck.service;
+
+import net.pss.beck.domain.Player;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+public interface PlayerService {
+    public void addPlayer(Player player);
+    public List<Player> getPlayers();
+    public Player getPlayerById(Integer id);
+    public Player getPlayerByLastNameAndData(String lastName, String data);
+}
Index: .settings/org.springframework.ide.eclipse.core.prefs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.springframework.ide.eclipse.core.prefs	(revision )
+++ .settings/org.springframework.ide.eclipse.core.prefs	(revision )
@@ -0,0 +1,69 @@
+#Tue Apr 20 16:59:06 EDT 2010
+eclipse.preferences.version=1
+org.springframework.ide.eclipse.core.builders.enable.aopreferencemodelbuilder=true
+org.springframework.ide.eclipse.core.builders.enable.beanmetadatabuilder=true
+org.springframework.ide.eclipse.core.builders.enable.osgibundleupdater=false
+org.springframework.ide.eclipse.core.enable.project.preferences=false
+org.springframework.ide.eclipse.core.validator.enable.com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.enable.com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.enable.com.springsource.sts.server.quickfix.manifestvalidator=false
+org.springframework.ide.eclipse.core.validator.enable.org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.enable.org.springframework.ide.eclipse.core.springvalidator=false
+org.springframework.ide.eclipse.core.validator.enable.org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.applicationSymbolicNameRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.applicationVersionRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.bundleActivationPolicyRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.bundleActivatorRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.bundleManifestVersionRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.bundleNameRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.bundleSymbolicNameRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.bundleVersionRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.exportPackageRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.importRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.parsingProblemsRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.server.ide.manifest.core.requireBundleRule-com.springsource.server.ide.manifest.core.manifestvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.bestpractices.com.springsource.sts.bestpractices.AvoidDriverManagerDataSource-com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.bestpractices.com.springsource.sts.bestpractices.ImportElementsAtTopRulee-com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.bestpractices.com.springsource.sts.bestpractices.ParentBeanSpecifiesAbstractClassRule-com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.bestpractices.com.springsource.sts.bestpractices.RefElementRule-com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.bestpractices.com.springsource.sts.bestpractices.TooManyBeansInFileRule-com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.bestpractices.com.springsource.sts.bestpractices.UnnecessaryValueElementRule-com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.bestpractices.com.springsource.sts.bestpractices.UseBeanInheritance-com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.bestpractices.legacyxmlusage.jndiobjectfactory-com.springsource.sts.bestpractices.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.server.quickfix.importBundleVersionRule-com.springsource.sts.server.quickfix.manifestvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.server.quickfix.importLibraryVersionRule-com.springsource.sts.server.quickfix.manifestvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.server.quickfix.importPackageVersionRule-com.springsource.sts.server.quickfix.manifestvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.com.springsource.sts.server.quickfix.requireBundleVersionRule-com.springsource.sts.server.quickfix.manifestvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.autowire.autowire-org.springframework.ide.eclipse.beans.core.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanAlias-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanClass-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanConstructorArgument-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanDefinition-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanDefinitionHolder-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanFactory-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanInitDestroyMethod-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanProperty-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.beanReference-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.methodOverride-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.parsingProblems-org.springframework.ide.eclipse.beans.core.beansvalidator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.requiredProperty-org.springframework.ide.eclipse.beans.core.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.beans.core.toolAnnotation-org.springframework.ide.eclipse.beans.core.beansvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.core.springClasspath-org.springframework.ide.eclipse.core.springvalidator=false
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.action-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.actionstate-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.attribute-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.attributemapper-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.beanaction-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.evaluationaction-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.evaluationresult-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.exceptionhandler-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.import-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.inputattribute-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.mapping-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.outputattribute-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.set-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.state-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.subflowstate-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.transition-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.variable-org.springframework.ide.eclipse.webflow.core.validator=true
+org.springframework.ide.eclipse.core.validator.rule.enable.org.springframework.ide.eclipse.webflow.core.validation.webflowstate-org.springframework.ide.eclipse.webflow.core.validator=true
Index: .idea/libraries/Maven__org_springframework_security_spring_security_config_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_security_spring_security_config_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_security_spring_security_config_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.security:spring-security-config:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_logging_commons_logging_1_0_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__commons_logging_commons_logging_1_0_4.xml	(revision )
+++ .idea/libraries/Maven__commons_logging_commons_logging_1_0_4.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-logging:commons-logging:1.0.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/parser/ParserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/parser/ParserServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/parser/ParserServiceImpl.java	(revision )
@@ -0,0 +1,23 @@
+package net.pss.beck.parser;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.Tournament;
+
+import java.io.IOException;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 06.01.14.
+ */
+public class ParserServiceImpl extends ParserHelper implements ParserService {
+    @Override
+    public List<Team> getAllTeams(Tournament tournament) throws IOException {
+        return getAllTeamsInTour(tournament.getName());
+    }
+
+    @Override
+    public List<Player> getAllPlayersOfTeam(Team team, Tournament tournament) throws IOException {
+        return getPlayersOfTeam(team.getName(),tournament.getName());
+    }
+}
Index: src/main/java/net/pss/beck/dao/PlayerDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/PlayerDAOImpl.java	(revision )
+++ src/main/java/net/pss/beck/dao/PlayerDAOImpl.java	(revision )
@@ -0,0 +1,40 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Player;
+import org.hibernate.SessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Repository
+public class PlayerDAOImpl implements PlayerDAO {
+
+    @Autowired
+    private SessionFactory sessionFactory;
+
+    @Override
+    public void addPlayer(Player player) {
+        sessionFactory.getCurrentSession().save(player);
+    }
+
+    @Override
+    @SuppressWarnings("unchecked")
+    public List<Player> getPlayers() {
+        return sessionFactory.getCurrentSession().createQuery("from Player").list();
+    }
+
+    public Player getPlayerById(Integer id){
+        return (Player) sessionFactory.getCurrentSession().
+            createQuery("from Player where id="+id).uniqueResult();
+    }
+
+    public Player getPlayerByLastNameAndData(String lastName, String data){
+        return (Player) sessionFactory.getCurrentSession().
+            createQuery("from Player where lastName=\'"+lastName+"\' and data=\'"+data+"\'").uniqueResult();
+    }
+
+}
Index: src/main/java/net/pss/beck/dao/TournamentDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/TournamentDAOImpl.java	(revision )
+++ src/main/java/net/pss/beck/dao/TournamentDAOImpl.java	(revision )
@@ -0,0 +1,77 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.Tournament;
+import org.hibernate.HibernateException;
+import org.hibernate.Session;
+import org.hibernate.SessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Repository
+public class TournamentDAOImpl implements TournamentDAO {
+
+    @Autowired
+    private SessionFactory sessionFactory;
+
+    @Override
+    public void addTournament(Tournament tournament) {
+        sessionFactory.getCurrentSession().saveOrUpdate(tournament);
+    }
+
+    @Override
+    public List<Tournament> getListTournaments() {
+        return sessionFactory.getCurrentSession().createQuery("from Tournament ").list();
+    }
+
+    @Override
+    public Tournament getTournamentById(Integer id) {
+        return (Tournament) getSession(sessionFactory).
+                createQuery("from Tournament where id="+id).uniqueResult();
+    }
+
+    public List<Team> getTeamsFromTournament(Integer id){
+        List<Integer> teamIdlList = getSession(sessionFactory).
+                createSQLQuery("select ID_TEAM from TEAMS_IN_TOURNAMENT WHERE ID_TOURNAMENT =" + id).list();
+        List<Team> teams = new ArrayList<Team>();
+        for(Integer teamId : teamIdlList){
+            teams.add((Team) getSession(sessionFactory).
+                    createQuery("from Team where id="+teamId).uniqueResult());
+        }
+        return teams;
+    }
+
+    public void addTeamsInTournament(Tournament tournament,List<Team> teamsAdd){
+        StringBuilder sql = new StringBuilder();
+        int i = 0;
+        for(Team team : teamsAdd){
+            sql.append("("+tournament.getId()+","+team.getId()+")");
+            if(teamsAdd.size()-1 != i){
+                sql.append(",");
+            }
+            i++;
+        }
+        getSession(sessionFactory).
+                createSQLQuery("insert into TEAMS_IN_TOURNAMENT (ID_TOURNAMENT,ID_TEAM)" +
+                        "values ("+tournament.getId()+")");
+    }
+
+    private Session getSession(SessionFactory sessionFactory){
+        Session session = null;
+        try{
+            session = sessionFactory.getCurrentSession();
+        }catch(HibernateException hex){
+            hex.printStackTrace();
+        }
+        if(session == null && !session.isOpen()){
+            session =  sessionFactory.openSession();
+        }
+        return session;
+    }
+}
Index: src/main/java/net/pss/beck/service/RefereeServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/RefereeServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/service/RefereeServiceImpl.java	(revision )
@@ -0,0 +1,23 @@
+package net.pss.beck.service;
+
+import net.pss.beck.dao.RefereeDAO;
+import net.pss.beck.domain.Referee;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Service
+public class RefereeServiceImpl implements RefereeService {
+
+    @Autowired
+    private RefereeDAO refereeDAO;
+
+    @Override
+    @Transactional
+    public void addTeam(Referee referee) {
+        refereeDAO.addReferee(referee);
+    }
+}
Index: src/main/java/net/pss/beck/dao/ContactDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/ContactDAOImpl.java	(revision )
+++ src/main/java/net/pss/beck/dao/ContactDAOImpl.java	(revision )
@@ -0,0 +1,35 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Contact;
+import org.hibernate.SessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+@Repository
+public class ContactDAOImpl implements ContactDAO {
+
+	@Autowired
+	private SessionFactory sessionFactory;
+
+	public void addContact(Contact contact) {
+		sessionFactory.getCurrentSession().save(contact);
+	}
+
+	@SuppressWarnings("unchecked")
+	public List<Contact> listContact() {
+
+		return sessionFactory.getCurrentSession().createQuery("from Contact")
+			.list();
+	}
+
+	public void removeContact(Integer id) {
+		Contact contact = (Contact) sessionFactory.getCurrentSession().load(
+				Contact.class, id);
+		if (null != contact) {
+			sessionFactory.getCurrentSession().delete(contact);
+		}
+
+	}
+}
Index: .idea/libraries/Maven__org_jsoup_jsoup_1_7_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_jsoup_jsoup_1_7_2.xml	(revision )
+++ .idea/libraries/Maven__org_jsoup_jsoup_1_7_2.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jsoup:jsoup:1.7.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jsoup/jsoup/1.7.2/jsoup-1.7.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jsoup/jsoup/1.7.2/jsoup-1.7.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jsoup/jsoup/1.7.2/jsoup-1.7.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .settings/org.eclipse.jst.common.project.facet.core.prefs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.eclipse.jst.common.project.facet.core.prefs	(revision )
+++ .settings/org.eclipse.jst.common.project.facet.core.prefs	(revision )
@@ -0,0 +1,3 @@
+#Tue Mar 17 09:59:19 EDT 2009
+classpath.helper/org.eclipse.jdt.launching.JRE_CONTAINER\:\:org.eclipse.jdt.internal.launching.macosx.MacOSXType\:\:JVM\ 1.5.0\ (MacOS\ X\ Default)/owners=jst.java\:5.0
+eclipse.preferences.version=1
Index: src/main/webapp/error403.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/error403.jsp	(revision )
+++ src/main/webapp/error403.jsp	(revision )
@@ -0,0 +1,1 @@
+HTTP Status 403 - Access is denied
\ No newline at end of file
Index: src/main/java/net/pss/beck/domain/Matches.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/Matches.java	(revision )
+++ src/main/java/net/pss/beck/domain/Matches.java	(revision )
@@ -0,0 +1,95 @@
+package net.pss.beck.domain;
+
+import javax.persistence.*;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Entity
+@Table(name = "MATCHES")
+public class Matches {
+    @Id
+    @Column(name = "ID_MATCH")
+    @GeneratedValue
+    private Integer id;
+
+    @Column(name = "DATA")
+    private String data;
+
+    @Column(name = "STAGE")
+    private String stage;
+
+    @ManyToOne(fetch = FetchType.EAGER)
+    @JoinColumn(name = "ID_REFEREE")
+    private Referee referee;
+
+    @ManyToOne(fetch = FetchType.EAGER)
+    @JoinColumn(name = "ID_TOURNAMENT")
+    private Tournament tournament;
+
+    @ManyToOne(fetch = FetchType.EAGER)
+    @JoinColumn(name = "ID_TEAM_1")
+    private Team team1;
+
+    @ManyToOne(fetch = FetchType.EAGER)
+    @JoinColumn(name = "ID_TEAM_2")
+    private Team team2;
+
+
+
+    public Referee getReferee() {
+        return referee;
+    }
+
+    public void setReferee(Referee referee) {
+        this.referee = referee;
+    }
+
+    public String getStage() {
+        return stage;
+    }
+
+    public void setStage(String stage) {
+        this.stage = stage;
+    }
+
+    public String getData() {
+        return data;
+    }
+
+    public void setData(String data) {
+        this.data = data;
+    }
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    public Team getTeam2() {
+        return team2;
+    }
+
+    public void setTeam2(Team team2) {
+        this.team2 = team2;
+    }
+
+    public Team getTeam1() {
+        return team1;
+    }
+
+    public void setTeam1(Team team1) {
+        this.team1 = team1;
+    }
+
+    public Tournament getTournament() {
+        return tournament;
+    }
+
+    public void setTournament(Tournament tournament) {
+        this.tournament = tournament;
+    }
+}
Index: .idea/libraries/Maven__org_springframework_spring_expression_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_expression_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_expression_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-expression:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/resources/hibernate.cfg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/hibernate.cfg.xml	(revision )
+++ src/main/resources/hibernate.cfg.xml	(revision )
@@ -0,0 +1,17 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE hibernate-configuration PUBLIC
+    "-//Hibernate/Hibernate Configuration DTD//EN"
+    "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
+
+<hibernate-configuration>
+	<session-factory>
+		<mapping class="net.pss.beck.domain.Contact" />
+		<mapping class="net.pss.beck.domain.Tournament" />
+		<mapping class="net.pss.beck.domain.Team" />
+		<mapping class="net.pss.beck.domain.Player" />
+		<mapping class="net.pss.beck.domain.Referee" />
+		<mapping class="net.pss.beck.domain.Matches" />
+		<mapping class="net.pss.beck.domain.PlayersInTeams" />
+		<mapping class="net.pss.beck.domain.TeamsInTournament" />
+	</session-factory>
+</hibernate-configuration>
\ No newline at end of file
Index: src/main/java/net/pss/beck/dao/PlayersInTeamsDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/PlayersInTeamsDAO.java	(revision )
+++ src/main/java/net/pss/beck/dao/PlayersInTeamsDAO.java	(revision )
@@ -0,0 +1,20 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.PlayersInTeams;
+import net.pss.beck.domain.Team;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+public interface PlayersInTeamsDAO {
+    public void addPlayerInTeam(PlayersInTeams playersInTeams);
+    public void deletePlayerInTeam(PlayersInTeams playersInTeams);
+    public List<PlayersInTeams> getPlayersInTeams();
+    public List<PlayersInTeams> getPlayersInTeam(Team team);
+    public List<Player> getPlayersByTeam(Team team);
+    public void deletePlayerByIdInTeam(Player player);
+    public PlayersInTeams getPlayersInTeamByTeamAndPlayer(Team team, Player player);
+}
Index: .idea/libraries/Maven__log4j_log4j_1_2_15.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__log4j_log4j_1_2_15.xml	(revision )
+++ .idea/libraries/Maven__log4j_log4j_1_2_15.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: log4j:log4j:1.2.15">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/log4j/log4j/1.2.15/log4j-1.2.15.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/log4j/log4j/1.2.15/log4j-1.2.15-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/log4j/log4j/1.2.15/log4j-1.2.15-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/domain/TeamsInTournament.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/TeamsInTournament.java	(revision )
+++ src/main/java/net/pss/beck/domain/TeamsInTournament.java	(revision )
@@ -0,0 +1,49 @@
+package net.pss.beck.domain;
+
+import javax.persistence.*;
+
+/**
+ * Created by amyalenkov on 15.01.14.
+ */
+@Entity
+@Table(name = "TEAMS_IN_TOURNAMENT")
+public class TeamsInTournament {
+
+    @Id
+    @GeneratedValue
+    private Integer id;
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "ID_TOURNAMENT")
+    private Tournament tournament;
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "ID_TEAM")
+    private Team team;
+
+    public Tournament getTournament() {
+        return tournament;
+    }
+
+    public void setTournament(Tournament tournament) {
+        this.tournament = tournament;
+    }
+
+    public Team getTeam() {
+        return team;
+    }
+
+    public void setTeam(Team team) {
+        this.team = team;
+    }
+
+
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+}
Index: .idea/libraries/Maven__org_aspectj_aspectjweaver_1_6_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_aspectj_aspectjweaver_1_6_8.xml	(revision )
+++ .idea/libraries/Maven__org_aspectj_aspectjweaver_1_6_8.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.aspectj:aspectjweaver:1.6.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/updater/UpdateTeams.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/updater/UpdateTeams.java	(revision )
+++ src/main/java/net/pss/beck/updater/UpdateTeams.java	(revision )
@@ -0,0 +1,16 @@
+package net.pss.beck.updater;
+
+import net.pss.beck.domain.Team;
+
+import java.io.IOException;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+public interface UpdateTeams {
+    public List<String> getTeamNamesForAddInTournament(List<Team> teamsOld) throws IOException;
+    public List<Team> getNewTeamsForAdd(List<Team> allTeams) throws IOException;
+    public List<Team> getTeamsForDeleteFromTournament(List<Team> teamsOld) throws IOException;
+
+}
Index: .idea/libraries/org_jsoup_jsoup_1_7_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/org_jsoup_jsoup_1_7_3.xml	(revision )
+++ .idea/libraries/org_jsoup_jsoup_1_7_3.xml	(revision )
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="org.jsoup:jsoup:1.7.3" type="repository">
+    <properties maven-id="org.jsoup:jsoup:1.7.3" />
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jsoup/jsoup/1.7.3/jsoup-1.7.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/dao/MatchesDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/MatchesDAO.java	(revision )
+++ src/main/java/net/pss/beck/dao/MatchesDAO.java	(revision )
@@ -0,0 +1,10 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Matches;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+public interface MatchesDAO {
+    public void addMatches(Matches matches);
+}
Index: beck.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- beck.iml	(revision )
+++ beck.iml	(revision )
@@ -0,0 +1,109 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <descriptors>
+          <deploymentDescriptor name="web.xml" url="file://$MODULE_DIR$/src/main/webapp/WEB-INF/web.xml" />
+        </descriptors>
+        <webroots>
+          <root url="file://$MODULE_DIR$/src/main/webapp" relative="/" />
+        </webroots>
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="hibernate" name="Hibernate">
+      <configuration>
+        <datasource-map>
+          <unit-entry name="hibernate.cfg.xml" />
+          <unit-entry name="sessionFactory" value="dataSource" />
+        </datasource-map>
+        <naming-strategy-map />
+        <deploymentDescriptor name="hibernate.cfg.xml" url="file://$MODULE_DIR$/src/main/resources/hibernate.cfg.xml" />
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration>
+        <fileset id="fileset" name="Spring Application Context" removed="false">
+          <file>file://$MODULE_DIR$/src/main/webapp/WEB-INF/spring/security.xml</file>
+          <file>file://$MODULE_DIR$/src/main/webapp/WEB-INF/spring/data.xml</file>
+          <file>file://$MODULE_DIR$/src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml</file>
+          <file>file://$MODULE_DIR$/src/main/webapp/WEB-INF/spring/root-context.xml</file>
+          <file>file://$MODULE_DIR$/src/main/webapp/WEB-INF/spring/appServlet/controllers.xml</file>
+        </fileset>
+      </configuration>
+    </facet>
+    <facet type="AspectJ" name="AspectJ">
+      <configuration>
+        <option name="overrideAspectPath" value="true" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_6" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="org.jsoup:jsoup:1.7.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: aopalliance:aopalliance:1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-asm:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-web:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-core:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjrt:1.6.9" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.6.8" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-config:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: javax.persistence:persistence-api:1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate:hibernate-core:3.3.2.GA" level="project" />
+    <orderEntry type="library" name="Maven: antlr:antlr:2.7.6" level="project" />
+    <orderEntry type="library" name="Maven: commons-collections:commons-collections:3.1" level="project" />
+    <orderEntry type="library" name="Maven: dom4j:dom4j:1.6.1" level="project" />
+    <orderEntry type="library" name="Maven: xml-apis:xml-apis:1.0.b2" level="project" />
+    <orderEntry type="library" name="Maven: javax.transaction:jta:1.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.5.10" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate:hibernate-annotations:3.3.1.GA" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate:hibernate:3.2.6.ga" level="project" />
+    <orderEntry type="library" name="Maven: net.sf.ehcache:ehcache:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.0.4" level="project" />
+    <orderEntry type="library" name="Maven: asm:asm-attrs:1.5.3" level="project" />
+    <orderEntry type="library" name="Maven: cglib:cglib:2.1_3" level="project" />
+    <orderEntry type="library" name="Maven: asm:asm:1.5.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate:hibernate-commons-annotations:3.3.0.ga" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate:ejb3-persistence:1.0.1.GA" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-orm:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:3.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:5.1.6" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.springframework.roo:org.springframework.roo.annotations:1.0.2.RELEASE" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.slf4j:jcl-over-slf4j:1.5.10" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.slf4j:slf4j-log4j12:1.5.10" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: log4j:log4j:1.2.15" level="project" />
+    <orderEntry type="library" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: javax.servlet:servlet-api:2.5" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: javax.servlet.jsp:jsp-api:2.1" level="project" />
+    <orderEntry type="library" name="Maven: javax.servlet:jstl:1.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.7" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.2.2" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.2.2" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jsoup:jsoup:1.7.2" level="project" />
+    <orderEntry type="library" name="junit:junit:4.11" level="project" />
+  </component>
+</module>
+
Index: .settings/org.eclipse.wst.common.project.facet.core.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.eclipse.wst.common.project.facet.core.xml	(revision )
+++ .settings/org.eclipse.wst.common.project.facet.core.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<faceted-project>
+  <fixed facet="jst.web"/>
+  <fixed facet="jst.java"/>
+  <installed facet="jst.java" version="5.0"/>
+  <installed facet="jst.web" version="2.5"/>
+</faceted-project>
Index: .idea/libraries/Maven__cglib_cglib_2_1_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__cglib_cglib_2_1_3.xml	(revision )
+++ .idea/libraries/Maven__cglib_cglib_2_1_3.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: cglib:cglib:2.1_3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/cglib/cglib/2.1_3/cglib-2.1_3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/cglib/cglib/2.1_3/cglib-2.1_3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/cglib/cglib/2.1_3/cglib-2.1_3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/views/teams.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/views/teams.jsp	(revision )
+++ src/main/webapp/WEB-INF/views/teams.jsp	(revision )
@@ -0,0 +1,60 @@
+<%--
+  Created by IntelliJ IDEA.
+  User: amyalenkov
+  Date: 08.01.14
+  Time: 12:22
+  To change this template use File | Settings | File Templates.
+--%>
+<%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
+<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
+
+<html>
+<head>
+    <title></title>
+    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
+    <script type="text/javascript">
+        $(document).ready(function () {
+            $('#updatePlayersInTeam').click(function(){
+                $.ajax({
+                    url: "/updatePlayersInTeam",
+                    type: "GET",
+                    data: "teamName="+$('#team').text(),
+                    success: function(html){
+                        location.reload();
+                    }
+                });
+            });
+        });
+    </script>
+</head>
+<body>
+<div id="team">${team.name}</div>
+<table>
+    <tr>
+        <td>id</td>
+        <td>firstName</td>
+        <td>lastName</td>
+        <td>data</td>
+        <td>country</td>
+        <td>number</td>
+    </tr>
+    <%
+
+    %>
+    <c:forEach items="${players}" var="player">
+    <tr>
+        <td>${player.player.id}</td>
+        <td>${player.player.firstName}</td>
+        <td>${player.player.lastName}</td>
+        <td>${player.player.data}</td>
+        <td>${player.player.counrty}</td>
+        <td>${player.number}</td>
+    </tr>
+    </c:forEach>
+
+</table>
+<input type="button" id="updatePlayersInTeam" value="Обновить состав">
+
+</body>
+</html>
Index: .springBeans
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .springBeans	(revision )
+++ .springBeans	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beansProjectDescription>
+	<version>1</version>
+	<pluginVersion><![CDATA[2.5.0.201010141000-RC1]]></pluginVersion>
+	<configSuffixes>
+		<configSuffix><![CDATA[xml]]></configSuffix>
+	</configSuffixes>
+	<enableImports><![CDATA[true]]></enableImports>
+	<configs>
+	</configs>
+	<configSets>
+	</configSets>
+</beansProjectDescription>
Index: src/main/java/net/pss/beck/service/TeamService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/TeamService.java	(revision )
+++ src/main/java/net/pss/beck/service/TeamService.java	(revision )
@@ -0,0 +1,18 @@
+package net.pss.beck.service;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+public interface TeamService {
+    public void addTeam(Team team);
+    public List<Team> getListTeams();
+    public Map<Player, Integer> getPlayersByTeamId(Integer id);
+    public Team getTeamById(Integer id);
+    public Team getTeamByName(String name);
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision )
+++ pom.xml	(revision )
@@ -0,0 +1,311 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<groupId>net.schastny</groupId>
+	<artifactId>contactmanager</artifactId>
+	<name>beck</name>
+	<packaging>war</packaging>
+	<version>1.0.0-BUILD-SNAPSHOT</version>
+	<properties>
+		<java-version>1.6</java-version>
+		<org.springframework-version>3.0.5.RELEASE</org.springframework-version>
+		<org.springframework.roo-version>1.0.2.RELEASE</org.springframework.roo-version>
+		<org.aspectj-version>1.6.9</org.aspectj-version>
+		<org.slf4j-version>1.5.10</org.slf4j-version>
+	</properties>
+	<dependencies>
+		<!-- Spring -->
+		<dependency>
+			<groupId>org.springframework</groupId>
+			<artifactId>spring-context</artifactId>
+			<version>${org.springframework-version}</version>
+			<exclusions>
+				<!-- Exclude Commons Logging in favor of SLF4j -->
+				<exclusion>
+					<groupId>commons-logging</groupId>
+					<artifactId>commons-logging</artifactId>
+				</exclusion>
+			</exclusions>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework</groupId>
+			<artifactId>spring-webmvc</artifactId>
+			<version>${org.springframework-version}</version>
+		</dependency>
+
+		<dependency>
+			<groupId>org.springframework.security</groupId>
+			<artifactId>spring-security-web</artifactId>
+			<version>${org.springframework-version}</version>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.security</groupId>
+			<artifactId>spring-security-config</artifactId>
+			<version>${org.springframework-version}</version>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.security</groupId>
+			<artifactId>spring-security-core</artifactId>
+			<version>${org.springframework-version}</version>
+		</dependency>
+
+
+		<dependency>
+			<groupId>javax.persistence</groupId>
+			<artifactId>persistence-api</artifactId>
+			<version>1.0</version>
+		</dependency>
+		<dependency>
+			<groupId>org.hibernate</groupId>
+			<artifactId>hibernate-core</artifactId>
+			<version>3.3.2.GA</version>
+		</dependency>
+		<dependency>
+			<groupId>org.hibernate</groupId>
+			<artifactId>hibernate-annotations</artifactId>
+			<version>3.3.1.GA</version>
+		</dependency>
+		<dependency>
+			<groupId>org.hibernate</groupId>
+			<artifactId>hibernate-commons-annotations</artifactId>
+			<version>3.3.0.ga</version>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework</groupId>
+			<artifactId>spring-tx</artifactId>
+			<version>${org.springframework-version}</version>
+		</dependency>
+
+		<dependency>
+			<groupId>org.springframework</groupId>
+			<artifactId>spring-orm</artifactId>
+			<version>${org.springframework-version}</version>
+		</dependency>
+		<dependency>
+			<groupId>mysql</groupId>
+			<artifactId>mysql-connector-java</artifactId>
+			<version>5.1.6</version>
+		</dependency>
+
+		<!-- Roo dependencies -->
+		<dependency>
+			<groupId>org.springframework.roo</groupId>
+			<artifactId>org.springframework.roo.annotations</artifactId>
+			<version>${org.springframework.roo-version}</version>
+			<scope>provided</scope>
+		</dependency>
+
+		<!-- AspectJ -->
+		<dependency>
+			<groupId>org.aspectj</groupId>
+			<artifactId>aspectjrt</artifactId>
+			<version>${org.aspectj-version}</version>
+		</dependency>
+
+		<!-- Logging -->
+		<dependency>
+			<groupId>org.slf4j</groupId>
+			<artifactId>slf4j-api</artifactId>
+			<version>${org.slf4j-version}</version>
+		</dependency>
+		<dependency>
+			<groupId>org.slf4j</groupId>
+			<artifactId>jcl-over-slf4j</artifactId>
+			<version>${org.slf4j-version}</version>
+			<scope>runtime</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.slf4j</groupId>
+			<artifactId>slf4j-log4j12</artifactId>
+			<version>${org.slf4j-version}</version>
+			<scope>runtime</scope>
+		</dependency>
+		<dependency>
+			<groupId>log4j</groupId>
+			<artifactId>log4j</artifactId>
+			<version>1.2.15</version>
+			<exclusions>
+				<exclusion>
+					<groupId>javax.mail</groupId>
+					<artifactId>mail</artifactId>
+				</exclusion>
+				<exclusion>
+					<groupId>javax.jms</groupId>
+					<artifactId>jms</artifactId>
+				</exclusion>
+				<exclusion>
+					<groupId>com.sun.jdmk</groupId>
+					<artifactId>jmxtools</artifactId>
+				</exclusion>
+				<exclusion>
+					<groupId>com.sun.jmx</groupId>
+					<artifactId>jmxri</artifactId>
+				</exclusion>
+			</exclusions>
+			<scope>runtime</scope>
+		</dependency>
+
+		<!-- @Inject -->
+		<dependency>
+			<groupId>javax.inject</groupId>
+			<artifactId>javax.inject</artifactId>
+			<version>1</version>
+		</dependency>
+
+		<!-- Servlet -->
+		<dependency>
+			<groupId>javax.servlet</groupId>
+			<artifactId>servlet-api</artifactId>
+			<version>2.5</version>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>
+			<groupId>javax.servlet.jsp</groupId>
+			<artifactId>jsp-api</artifactId>
+			<version>2.1</version>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>
+			<groupId>javax.servlet</groupId>
+			<artifactId>jstl</artifactId>
+			<version>1.2</version>
+		</dependency>
+
+		<!-- Test -->
+		<dependency>
+			<groupId>junit</groupId>
+			<artifactId>junit</artifactId>
+			<version>4.7</version>
+			<scope>test</scope>
+		</dependency>
+
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-core</artifactId>
+            <version>2.2.2</version>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+            <version>2.2.2</version>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-annotations</artifactId>
+            <version>2.2.2</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.jsoup</groupId>
+            <artifactId>jsoup</artifactId>
+            <version>1.7.2</version>
+        </dependency>
+
+
+
+    </dependencies>
+	<repositories>
+		<!-- For testing against latest Spring snapshots -->
+		<repository>
+			<id>org.springframework.maven.snapshot</id>
+			<name>Spring Maven Snapshot Repository</name>
+			<url>http://maven.springframework.org/snapshot</url>
+			<releases>
+				<enabled>false</enabled>
+			</releases>
+			<snapshots>
+				<enabled>true</enabled>
+			</snapshots>
+		</repository>
+		<!-- For developing against latest Spring milestones -->
+		<repository>
+			<id>org.springframework.maven.milestone</id>
+			<name>Spring Maven Milestone Repository</name>
+			<url>http://maven.springframework.org/milestone</url>
+			<snapshots>
+				<enabled>false</enabled>
+			</snapshots>
+		</repository>
+	</repositories>
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-compiler-plugin</artifactId>
+				<configuration>
+					<source>${java-version}</source>
+					<target>${java-version}</target>
+				</configuration>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-war-plugin</artifactId>
+				<configuration>
+					<warName>ContactManager</warName>
+				</configuration>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-dependency-plugin</artifactId>
+				<executions>
+					<execution>
+						<id>install</id>
+						<phase>install</phase>
+						<goals>
+							<goal>sources</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
+			<plugin>
+				<groupId>org.codehaus.mojo</groupId>
+				<artifactId>aspectj-maven-plugin</artifactId>
+				<!-- Have to use version 1.2 since version 1.3 does not appear to work 
+					with ITDs -->
+				<version>1.2</version>
+				<dependencies>
+					<!-- You must use Maven 2.0.9 or above or these are ignored (see MNG-2972) -->
+					<dependency>
+						<groupId>org.aspectj</groupId>
+						<artifactId>aspectjrt</artifactId>
+						<version>${org.aspectj-version}</version>
+					</dependency>
+					<dependency>
+						<groupId>org.aspectj</groupId>
+						<artifactId>aspectjtools</artifactId>
+						<version>${org.aspectj-version}</version>
+					</dependency>
+				</dependencies>
+				<executions>
+					<execution>
+						<goals>
+							<goal>compile</goal>
+							<goal>test-compile</goal>
+						</goals>
+					</execution>
+				</executions>
+				<configuration>
+					<outxml>true</outxml>
+					<source>${java-version}</source>
+					<target>${java-version}</target>
+				</configuration>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-surefire-plugin</artifactId>
+				<configuration>
+					<junitArtifactName>junit:junit</junitArtifactName>
+					<excludes>
+						<exclude>**/*_Roo_*</exclude>
+					</excludes>
+				</configuration>
+			</plugin>
+			<plugin>
+				<groupId>org.codehaus.mojo</groupId>
+				<artifactId>tomcat-maven-plugin</artifactId>
+				<version>1.0-beta-1</version>
+			</plugin>
+		</plugins>
+	</build>
+</project>
Index: .idea/libraries/Maven__aopalliance_aopalliance_1_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__aopalliance_aopalliance_1_0.xml	(revision )
+++ .idea/libraries/Maven__aopalliance_aopalliance_1_0.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: aopalliance:aopalliance:1.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/aopalliance/aopalliance/1.0/aopalliance-1.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/aopalliance/aopalliance/1.0/aopalliance-1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/aopalliance/aopalliance/1.0/aopalliance-1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/dao/PlayersInTeamsDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/PlayersInTeamsDAOImpl.java	(revision )
+++ src/main/java/net/pss/beck/dao/PlayersInTeamsDAOImpl.java	(revision )
@@ -0,0 +1,82 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.PlayersInTeams;
+import net.pss.beck.domain.Team;
+import org.hibernate.HibernateException;
+import org.hibernate.Session;
+import org.hibernate.SessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Repository
+public class PlayersInTeamsDAOImpl implements PlayersInTeamsDAO {
+
+    @Autowired
+    private SessionFactory sessionFactory;
+
+    @Override
+    public void addPlayerInTeam(PlayersInTeams playersInTeams) {
+        sessionFactory.getCurrentSession().saveOrUpdate(playersInTeams);
+    }
+
+    @Override
+    public void deletePlayerInTeam(PlayersInTeams playersInTeams) {
+        sessionFactory.getCurrentSession().delete(playersInTeams);
+    }
+
+    @Override
+    public List<PlayersInTeams> getPlayersInTeams() {
+        return sessionFactory.getCurrentSession().createQuery("from PlayersInTeams ").list();
+    }
+
+    @Override
+    public List<PlayersInTeams> getPlayersInTeam(Team team) {
+        return sessionFactory.getCurrentSession().
+                createQuery("from PlayersInTeams where team.id=" + team.getId()).list();
+    }
+
+    @Override
+    public List<Player> getPlayersByTeam(Team team){
+        List<Integer> playerIdlList = getSession(sessionFactory).
+                createSQLQuery("select ID_PLAYER from PLAYERS_IN_TEAMS WHERE ID_TEAM =" + team.getId()).list();
+        List<Player> players = new ArrayList<Player>();
+        for(Integer playerId : playerIdlList){
+            players.add((Player) getSession(sessionFactory).
+                    createQuery("from Player where id=" + playerId).uniqueResult());
+        }
+        return players;
+    }
+
+    public void deletePlayerByIdInTeam(Player player){
+        sessionFactory.getCurrentSession().
+                createSQLQuery("delete from PLAYERS_IN_TEAMS where ID_PLAYER=" + player.getId());
+    }
+
+    public PlayersInTeams getPlayersInTeamByTeamAndPlayer(Team team, Player player){
+        return (PlayersInTeams) sessionFactory.getCurrentSession().
+                createQuery("from PlayersInTeams where team.id=" + team.getId()+
+                " and player.id="+player.getId()).uniqueResult();
+    }
+
+
+    private Session getSession(SessionFactory sessionFactory){
+        Session session = null;
+        try{
+            session = sessionFactory.getCurrentSession();
+        }catch(HibernateException hex){
+            hex.printStackTrace();
+        }
+        if(session == null && !session.isOpen()){
+            session =  sessionFactory.openSession();
+        }
+        return session;
+    }
+
+}
Index: .settings/org.maven.ide.eclipse.prefs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.maven.ide.eclipse.prefs	(revision )
+++ .settings/org.maven.ide.eclipse.prefs	(revision )
@@ -0,0 +1,9 @@
+#Tue Mar 17 14:28:16 EDT 2009
+activeProfiles=
+eclipse.preferences.version=1
+fullBuildGoals=process-test-resources
+includeModules=false
+resolveWorkspaceProjects=true
+resourceFilterGoals=process-resources resources\:testResources
+skipCompilerPlugin=true
+version=1
Index: src/main/webapp/WEB-INF/spring/appServlet/controllers.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/spring/appServlet/controllers.xml	(revision )
+++ src/main/webapp/WEB-INF/spring/appServlet/controllers.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xmlns:mvc="http://www.springframework.org/schema/mvc"
+	xmlns:context="http://www.springframework.org/schema/context"
+	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
+		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
+		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
+
+	<!-- Определяем папку, в которой будем искать веб компоненты (контроллеры)-->
+	<context:component-scan base-package="net.pss.beck.web" />
+	 
+</beans>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_web_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_web_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_web_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-web:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/spring/security.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/spring/security.xml	(revision )
+++ src/main/webapp/WEB-INF/spring/security.xml	(revision )
@@ -0,0 +1,30 @@
+<beans:beans xmlns="http://www.springframework.org/schema/security"
+	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://www.springframework.org/schema/beans
+http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
+http://www.springframework.org/schema/security
+http://www.springframework.org/schema/security/spring-security-3.0.xsd">
+
+	<http access-denied-page="/error403.jsp">
+		<intercept-url pattern="/index*" access="ROLE_USER,ROLE_ANONYMOUS" />
+		<intercept-url pattern="/add*" access="ROLE_USER" />
+		<intercept-url pattern="/delete/*" access="ROLE_ADMIN" />
+		<form-login login-page="/login.jsp" default-target-url="/index"
+			authentication-failure-url="/login.jsp?error=true" />
+		<logout logout-url="/logout" logout-success-url="/index" />
+		
+		<anonymous username="guest" granted-authority="ROLE_ANONYMOUS" />
+		<remember-me />
+	</http>
+
+	<authentication-manager>
+		<authentication-provider>
+			<user-service>
+				<user name="admin" password="pass" authorities="ROLE_ADMIN,ROLE_USER" />
+				<user name="user1" password="1111" authorities="ROLE_USER" />
+				<user name="user2" password="2222" disabled="true" authorities="ROLE_USER" />
+			</user-service>
+		</authentication-provider>
+	</authentication-manager>
+
+</beans:beans>
\ No newline at end of file
Index: src/main/java/net/pss/beck/service/TournamentServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/TournamentServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/service/TournamentServiceImpl.java	(revision )
@@ -0,0 +1,50 @@
+package net.pss.beck.service;
+
+import net.pss.beck.dao.TournamentDAO;
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.Tournament;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+@Service
+public class TournamentServiceImpl implements TournamentService {
+
+    @Autowired
+    private TournamentDAO tournamentDAO;
+
+    @Override
+    @Transactional
+    public void addTournament(Tournament tournament) {
+        tournamentDAO.addTournament(tournament);
+    }
+
+    @Override
+    @Transactional
+    public List<Tournament> getListTournaments() {
+        return tournamentDAO.getListTournaments();
+    }
+
+    @Override
+    @Transactional
+    public Tournament getTournamentById(Integer id) {
+        return tournamentDAO.getTournamentById(id);
+    }
+
+    @Override
+    @Transactional
+    public List<Team> getTeamsFromTournament(Integer id) {
+        return tournamentDAO.getTeamsFromTournament(id);
+    }
+
+    @Override
+    @Transactional
+    public void addTeamsInTournament(Tournament tournament,List<Team> teamsAdd){
+        tournamentDAO.addTeamsInTournament(tournament,teamsAdd);
+    }
+}
Index: src/main/java/net/pss/beck/service/MatchesServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/MatchesServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/service/MatchesServiceImpl.java	(revision )
@@ -0,0 +1,23 @@
+package net.pss.beck.service;
+
+import net.pss.beck.dao.MatchesDAO;
+import net.pss.beck.domain.Matches;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Service
+public class MatchesServiceImpl implements MatchesService {
+
+    @Autowired
+    MatchesDAO matchesDAO;
+
+    @Override
+    @Transactional
+    public void addMatches(Matches matches) {
+        matchesDAO.addMatches(matches);
+    }
+}
Index: .idea/libraries/Maven__org_springframework_roo_org_springframework_roo_annotations_1_0_2_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_roo_org_springframework_roo_annotations_1_0_2_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_roo_org_springframework_roo_annotations_1_0_2_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.roo:org.springframework.roo.annotations:1.0.2.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__antlr_antlr_2_7_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__antlr_antlr_2_7_6.xml	(revision )
+++ .idea/libraries/Maven__antlr_antlr_2_7_6.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: antlr:antlr:2.7.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.6/antlr-2.7.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.6/antlr-2.7.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.6/antlr-2.7.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_collections_commons_collections_3_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__commons_collections_commons_collections_3_1.xml	(revision )
+++ .idea/libraries/Maven__commons_collections_commons_collections_3_1.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-collections:commons-collections:3.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.1/commons-collections-3.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.1/commons-collections-3.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.1/commons-collections-3.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/service/TeamsInTournamentServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/TeamsInTournamentServiceImpl.java	(revision )
+++ src/main/java/net/pss/beck/service/TeamsInTournamentServiceImpl.java	(revision )
@@ -0,0 +1,58 @@
+package net.pss.beck.service;
+
+import net.pss.beck.dao.TeamsInTournamentDAO;
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.TeamsInTournament;
+import net.pss.beck.domain.Tournament;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+@Service
+public class TeamsInTournamentServiceImpl implements TeamsInTournamentService {
+
+    @Autowired
+    private TeamsInTournamentDAO teamsInTournamentDAO;
+
+    @Override
+    @Transactional
+    public void addTeamInTournament(TeamsInTournament teamsInTournament) {
+        teamsInTournamentDAO.addTeamInTournament(teamsInTournament);
+    }
+
+    @Override
+    @Transactional
+    public void deleteTeamInTournament(TeamsInTournament teamsInTournament) {
+        teamsInTournamentDAO.deleteTeamInTournament(teamsInTournament);
+    }
+
+    @Override
+    @Transactional
+    public List<TeamsInTournament> getAllTeamsInTournaments() {
+        return teamsInTournamentDAO.getAllTeamsInTournaments();
+    }
+
+    @Override
+    @Transactional
+    public List<TeamsInTournament> getTeamsInTournament(Tournament tournament) {
+        return teamsInTournamentDAO.getTeamsInTournament(tournament);
+    }
+
+    @Override
+    @Transactional
+    public TeamsInTournament getTeamInTournament(Team team, Tournament tournament) {
+        return teamsInTournamentDAO.getTeamsInTournament(team,tournament);
+    }
+
+    @Override
+    @Transactional
+    public List<Tournament> getTournamentsByTeam(Team team){
+        return teamsInTournamentDAO.getTournamentsTeamByTeam(team);
+    }
+
+}
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision )
+++ .idea/compiler.xml	(revision )
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AjcSettings">
+    <option name="ajcPath" value="$MAVEN_REPOSITORY$/org/aspectj/aspectjtools/1.6.9/aspectjtools-1.6.9.jar" />
+    <option name="explicitAspectPath" value="true" />
+    <option name="delegateToJavac" value="true" />
+  </component>
+  <component name="CompilerConfiguration">
+    <option name="DEFAULT_COMPILER" value="ajc" />
+    <resourceExtensions />
+    <wildcardResourcePatterns>
+      <entry name="!?*.java" />
+      <entry name="!?*.form" />
+      <entry name="!?*.class" />
+      <entry name="!?*.groovy" />
+      <entry name="!?*.scala" />
+      <entry name="!?*.flex" />
+      <entry name="!?*.kt" />
+      <entry name="!?*.clj" />
+    </wildcardResourcePatterns>
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="false">
+        <processorPath useClasspath="true" />
+      </profile>
+      <profile default="false" name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <processorPath useClasspath="true" />
+        <module name="contactmanager" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="contactmanager" target="1.6" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
+
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_2_2.xml	(revision )
+++ .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_2_2.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.2.2/jackson-annotations-2.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.2.2/jackson-annotations-2.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.2.2/jackson-annotations-2.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/service/ContactService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/ContactService.java	(revision )
+++ src/main/java/net/pss/beck/service/ContactService.java	(revision )
@@ -0,0 +1,13 @@
+package net.pss.beck.service;
+
+import java.util.List;
+import net.pss.beck.domain.Contact;
+
+public interface ContactService {
+
+	public void addContact(Contact contact);
+
+	public List<Contact> listContact();
+
+	public void removeContact(Integer id);
+}
Index: .idea/scopes/scope_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/scopes/scope_settings.xml	(revision )
+++ .idea/scopes/scope_settings.xml	(revision )
@@ -0,0 +1,5 @@
+<component name="DependencyValidationManager">
+  <state>
+    <option name="SKIP_IMPORT_STATEMENTS" value="false" />
+  </state>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__dom4j_dom4j_1_6_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__dom4j_dom4j_1_6_1.xml	(revision )
+++ .idea/libraries/Maven__dom4j_dom4j_1_6_1.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: dom4j:dom4j:1.6.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/dom4j/dom4j/1.6.1/dom4j-1.6.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/dom4j/dom4j/1.6.1/dom4j-1.6.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/dao/MatchesDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/MatchesDAOImpl.java	(revision )
+++ src/main/java/net/pss/beck/dao/MatchesDAOImpl.java	(revision )
@@ -0,0 +1,21 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Matches;
+import org.hibernate.SessionFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+@Repository
+public class MatchesDAOImpl implements MatchesDAO {
+
+    @Autowired
+    private SessionFactory sessionFactory;
+
+    @Override
+    public void addMatches(Matches matches) {
+        sessionFactory.getCurrentSession().save(matches);
+    }
+}
Index: .idea/libraries/Maven__org_hibernate_hibernate_annotations_3_3_1_GA.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_hibernate_hibernate_annotations_3_3_1_GA.xml	(revision )
+++ .idea/libraries/Maven__org_hibernate_hibernate_annotations_3_3_1_GA.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate:hibernate-annotations:3.3.1.GA">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-annotations/3.3.1.GA/hibernate-annotations-3.3.1.GA.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-annotations/3.3.1.GA/hibernate-annotations-3.3.1.GA-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-annotations/3.3.1.GA/hibernate-annotations-3.3.1.GA-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/service/PlayersInTeamsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/PlayersInTeamsService.java	(revision )
+++ src/main/java/net/pss/beck/service/PlayersInTeamsService.java	(revision )
@@ -0,0 +1,20 @@
+package net.pss.beck.service;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.PlayersInTeams;
+import net.pss.beck.domain.Team;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 07.01.14.
+ */
+public interface PlayersInTeamsService {
+    public void addPlayerInTeam(PlayersInTeams playersInTeams);
+    public void deletePlayerInTeam(PlayersInTeams playersInTeams);
+    public List<PlayersInTeams> getPlayersInTeams();
+    public List<PlayersInTeams> getPlayersInTeam(Team team);
+    public List<Player> getPlayersByTeam(Team team);
+    public void deletePlayerByIdInTeam(Player player);
+    public PlayersInTeams getPlayersInTeamByTeamAndPlayer(Team team, Player player);
+}
Index: .idea/libraries/Maven__org_springframework_spring_orm_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_orm_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_orm_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-orm:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_core_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_spring_core_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_spring_core_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-core:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/parser/ParserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/parser/ParserService.java	(revision )
+++ src/main/java/net/pss/beck/parser/ParserService.java	(revision )
@@ -0,0 +1,16 @@
+package net.pss.beck.parser;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.Tournament;
+
+import java.io.IOException;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 06.01.14.
+ */
+public interface ParserService {
+    public List<Team> getAllTeams(Tournament tournament) throws IOException;
+    public List<Player> getAllPlayersOfTeam(Team team, Tournament tournament) throws IOException;
+}
Index: .idea/libraries/Maven__asm_asm_attrs_1_5_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__asm_asm_attrs_1_5_3.xml	(revision )
+++ .idea/libraries/Maven__asm_asm_attrs_1_5_3.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: asm:asm-attrs:1.5.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/asm/asm-attrs/1.5.3/asm-attrs-1.5.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/asm/asm-attrs/1.5.3/asm-attrs-1.5.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/artifacts/contactmanager_war.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/artifacts/contactmanager_war.xml	(revision )
+++ .idea/artifacts/contactmanager_war.xml	(revision )
@@ -0,0 +1,14 @@
+<component name="ArtifactManager">
+  <artifact type="war" name="contactmanager:war">
+    <output-path>$PROJECT_DIR$/target</output-path>
+    <root id="archive" name="ContactManager.war">
+      <element id="artifact" artifact-name="contactmanager:war exploded" />
+      <element id="directory" name="WEB-INF">
+        <element id="directory" name="lib">
+          <element id="library" level="project" name="org.jsoup:jsoup:1.7.3" />
+          <element id="library" level="project" name="junit:junit:4.11" />
+        </element>
+      </element>
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
Index: src/main/resources/log4j.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/log4j.xml	(revision )
+++ src/main/resources/log4j.xml	(revision )
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
+<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
+
+	<!-- Appenders -->
+	<appender name="console" class="org.apache.log4j.ConsoleAppender">
+		<param name="Target" value="System.out" />
+		<layout class="org.apache.log4j.PatternLayout">
+			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
+		</layout>
+	</appender>
+	
+	<!-- Application Loggers -->
+	<logger name="net.pss.beck">
+		<level value="info" />
+	</logger>
+	
+	<!-- 3rdparty Loggers -->
+	<logger name="org.springframework.core">
+		<level value="info" />
+	</logger>
+	
+	<logger name="org.springframework.beans">
+		<level value="info" />
+	</logger>
+	
+	<logger name="org.springframework.context">
+		<level value="info" />
+	</logger>
+
+	<logger name="org.springframework.web">
+		<level value="info" />
+	</logger>
+
+	<!-- Root Logger -->
+	<root>
+		<priority value="warn" />
+		<appender-ref ref="console" />
+	</root>
+	
+</log4j:configuration>
Index: .idea/libraries/Maven__mysql_mysql_connector_java_5_1_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__mysql_mysql_connector_java_5_1_6.xml	(revision )
+++ .idea/libraries/Maven__mysql_mysql_connector_java_5_1_6.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: mysql:mysql-connector-java:5.1.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/5.1.6/mysql-connector-java-5.1.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/5.1.6/mysql-connector-java-5.1.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/5.1.6/mysql-connector-java-5.1.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EntryPointsManager">
+    <entry_points version="2.0" />
+  </component>
+  <component name="FrameworkDetectionExcludesConfiguration">
+    <file type="web" url="file://$PROJECT_DIR$" />
+  </component>
+  <component name="IdProvider" IDEtalkID="63276E3B0A797C417953FC6EE93F95D9" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_6" assert-keyword="true" jdk-15="true" project-jdk-name="1.7" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/classes" />
+  </component>
+  <component name="RegexUtilComponent" text="23.03.1989 Ohne Berater" flags="0" regex="\D" mode="0" />
+</project>
+
Index: src/main/resources/messages_en.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/messages_en.properties	(revision )
+++ src/main/resources/messages_en.properties	(revision )
@@ -0,0 +1,18 @@
+label.firstname=First Name
+label.lastname=Last Name
+label.email=Email
+label.telephone=Telephone
+label.addcontact=Add Contact
+ 
+label.menu=Menu
+label.title=Contact Manager
+label.footer=&copy; schastny.net
+
+label.contacts=Contacts
+label.delete=Delete
+
+label.logout=Logout
+label.login=Login
+label.password=Password
+label.remember=Remember me
+label.loginerror=Login Error
\ No newline at end of file
Index: src/main/java/net/pss/beck/domain/json/JMarker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/json/JMarker.java	(revision )
+++ src/main/java/net/pss/beck/domain/json/JMarker.java	(revision )
@@ -0,0 +1,141 @@
+package net.pss.beck.domain.json;
+
+import com.fasterxml.jackson.annotation.JsonProperty;
+
+import java.io.Serializable;
+
+/**
+ * Created by amyalenkov on 03.01.14.
+ */
+public class JMarker implements Serializable{
+    @JsonProperty("ID")
+    private String id;
+    @JsonProperty("BasicAction")
+    private String basicAction;
+    @JsonProperty("AddAction")
+    private String addAction;
+    @JsonProperty("PartBody")
+    private String PartBody;
+    @JsonProperty("Player1")
+    private String player1;
+    @JsonProperty("Team1")
+    private String team1;
+    @JsonProperty("Player2")
+    private String player2;
+    @JsonProperty("Team2")
+    private String team2;
+    @JsonProperty("x")
+    private String x;
+    @JsonProperty("y")
+    private String y;
+    @JsonProperty("Time")
+    private String time;
+
+    public JMarker(String id, String basicAction, String addAction,
+                   String PartBody, String player1, String team1,
+                   String player2, String team2, String x, String y, String time) {
+        this.id = id;
+        this.basicAction = basicAction;
+        this.addAction = addAction;
+        this.PartBody = PartBody;
+        this.player1 = player1;
+        this.team1 = team1;
+        this.player2 = player2;
+        this.team2 = team2;
+        this.x = x;
+        this.y = y;
+        this.time = time;
+    }
+
+    public JMarker(){
+
+    }
+
+    public String getBasicAction() {
+        return basicAction;
+    }
+
+    public void setBasicAction(String basicAction) {
+        this.basicAction = basicAction;
+    }
+
+    public String getAddAction() {
+        return addAction;
+    }
+
+    public void setAddAction(String addAction) {
+        this.addAction = addAction;
+    }
+
+    public String getPartBody() {
+        return PartBody;
+    }
+
+    public void setPartBody(String PartBody) {
+        this.PartBody = PartBody;
+    }
+
+    public String getPlayer1() {
+        return player1;
+    }
+
+    public void setPlayer1(String player1) {
+        this.player1 = player1;
+    }
+
+    public String getTeam1() {
+        return team1;
+    }
+
+    public void setTeam1(String team1) {
+        this.team1 = team1;
+    }
+
+    public String getPlayer2() {
+        return player2;
+    }
+
+    public void setPlayer2(String player2) {
+        this.player2 = player2;
+    }
+
+    public String getTeam2() {
+        return team2;
+    }
+
+    public void setTeam2(String team2) {
+        this.team2 = team2;
+    }
+
+    public String getX() {
+        return x;
+    }
+
+    public void setX(String x) {
+        this.x = x;
+    }
+
+    public String getY() {
+        return y;
+    }
+
+    public void setY(String y) {
+        this.y = y;
+    }
+
+    public String getTime() {
+        return time;
+    }
+
+    public void setTime(String time) {
+        this.time = time;
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+}
Index: .idea/libraries/Maven__org_springframework_security_spring_security_core_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_security_spring_security_core_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_security_spring_security_core_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.security:spring-security-core:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hibernate_hibernate_3_2_6_ga.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_hibernate_hibernate_3_2_6_ga.xml	(revision )
+++ .idea/libraries/Maven__org_hibernate_hibernate_3_2_6_ga.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate:hibernate:3.2.6.ga">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_inject_javax_inject_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__javax_inject_javax_inject_1.xml	(revision )
+++ .idea/libraries/Maven__javax_inject_javax_inject_1.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.inject:javax.inject:1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/inject/javax.inject/1/javax.inject-1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/inject/javax.inject/1/javax.inject-1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/inject/javax.inject/1/javax.inject-1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_sf_ehcache_ehcache_1_2_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__net_sf_ehcache_ehcache_1_2_3.xml	(revision )
+++ .idea/libraries/Maven__net_sf_ehcache_ehcache_1_2_3.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.sf.ehcache:ehcache:1.2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_security_spring_security_web_3_0_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_springframework_security_spring_security_web_3_0_5_RELEASE.xml	(revision )
+++ .idea/libraries/Maven__org_springframework_security_spring_security_web_3_0_5_RELEASE.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.security:spring-security-web:3.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/dao/TournamentDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/TournamentDAO.java	(revision )
+++ src/main/java/net/pss/beck/dao/TournamentDAO.java	(revision )
@@ -0,0 +1,17 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.Tournament;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+public interface TournamentDAO {
+    public void addTournament(Tournament tournament);
+    public List<Tournament> getListTournaments();
+    public Tournament getTournamentById(Integer id);
+    public List<Team> getTeamsFromTournament(Integer id);
+    public void addTeamsInTournament(Tournament tournament,List<Team> teamsAdd);
+}
Index: src/main/java/net/pss/beck/service/TeamsInTournamentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/service/TeamsInTournamentService.java	(revision )
+++ src/main/java/net/pss/beck/service/TeamsInTournamentService.java	(revision )
@@ -0,0 +1,19 @@
+package net.pss.beck.service;
+
+import net.pss.beck.domain.Team;
+import net.pss.beck.domain.TeamsInTournament;
+import net.pss.beck.domain.Tournament;
+
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+public interface TeamsInTournamentService {
+    public void addTeamInTournament(TeamsInTournament teamsInTournament);
+    public void deleteTeamInTournament(TeamsInTournament teamsInTournament);
+    public List<TeamsInTournament> getAllTeamsInTournaments();
+    public List<TeamsInTournament> getTeamsInTournament(Tournament tournament);
+    public TeamsInTournament getTeamInTournament(Team team, Tournament tournament);
+    public List<Tournament> getTournamentsByTeam(Team team);
+}
Index: .settings/org.springframework.ide.eclipse.beans.core.prefs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .settings/org.springframework.ide.eclipse.beans.core.prefs	(revision )
+++ .settings/org.springframework.ide.eclipse.beans.core.prefs	(revision )
@@ -0,0 +1,78 @@
+#Mon Oct 18 12:37:52 EDT 2010
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.osgi.org/xmlns/blueprint/v1.0.0=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/aop=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/batch=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/beans=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/context=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/faces=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/flex=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/file=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/http=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/httpinvoker=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/ip=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/jdbc=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/jms=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/jmx=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/mail=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/rmi=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/security=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/stream=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/ws=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/integration/xml=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/jdbc=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/jee=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/jms=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/lang=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/mvc=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/osgi=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/osgi-compendium=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/oxm=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/p=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/security=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/task=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/tx=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/util=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/web-services=
+//org.springframework.ide.eclipse.beans.core.default.version.http\://www.springframework.org/schema/webflow-config=
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.osgi.org/xmlns/blueprint/v1.0.0=bp
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/aop=aop
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/batch=batch
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/beans=beans
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/context=context
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/faces=faces
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/flex=flex
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration=int
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/file=int-file
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/http=int-http
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/httpinvoker=int-httpinvoker
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/ip=int-ip
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/jdbc=int-jdbc
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/jms=int-jms
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/jmx=int-jmx
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/mail=int-mail
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/rmi=int-rmi
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/security=int-security
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/stream=int-stream
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/ws=int-ws
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/integration/xml=int-xml
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/jdbc=jdbc
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/jee=jee
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/jms=jms
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/lang=lang
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/mvc=mvc
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/osgi=osgi
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/osgi-compendium=osgix
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/oxm=oxm
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/p=p
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/security=sec
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/task=task
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/tx=tx
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/util=util
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/web-services=ws
+//org.springframework.ide.eclipse.beans.core.prefix.http\://www.springframework.org/schema/webflow-config=flow
+eclipse.preferences.version=1
+org.springframework.ide.eclipse.beans.core.default.version.check.classpath=true
+org.springframework.ide.eclipse.beans.core.enable.project.preferences=false
+org.springframework.ide.eclipse.beans.core.ignoreMissingNamespaceHandler=false
+org.springframework.ide.eclipse.beans.core.loadNamespaceHandlerFromClasspath=false
Index: src/main/resources/messages_ru.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/messages_ru.properties	(revision )
+++ src/main/resources/messages_ru.properties	(revision )
@@ -0,0 +1,18 @@
+label.firstname=Имя
+label.lastname=Фамилия
+label.email=Email
+label.telephone=Телефон
+label.addcontact=Добавить контакт
+ 
+label.menu=Меню
+label.title=Менеджер контактов
+label.footer=&copy; schastny.net
+
+label.contacts=Контакты
+label.delete=Удалить
+
+label.logout=Выйти из приложения
+label.login=Логин
+label.password=Пароль
+label.remember=Запомнить меня
+label.loginerror=Ошибка входа
\ No newline at end of file
Index: src/test/resources/log4j.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/resources/log4j.xml	(revision )
+++ src/test/resources/log4j.xml	(revision )
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
+<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
+
+	<!-- Appenders -->
+	<appender name="console" class="org.apache.log4j.ConsoleAppender">
+		<param name="Target" value="System.out" />
+		<layout class="org.apache.log4j.PatternLayout">
+			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
+		</layout>
+	</appender>
+	
+	<!-- Application Loggers -->
+	<logger name="net.pss.beck">
+		<level value="info" />
+	</logger>
+	
+	<!-- 3rdparty Loggers -->
+	<logger name="org.springframework.core">
+		<level value="info" />
+	</logger>	
+	
+	<logger name="org.springframework.beans">
+		<level value="info" />
+	</logger>
+	
+	<logger name="org.springframework.context">
+		<level value="info" />
+	</logger>
+
+	<logger name="org.springframework.web">
+		<level value="info" />
+	</logger>
+
+	<!-- Root Logger -->
+	<root>
+		<priority value="info" />
+		<appender-ref ref="console" />
+	</root>
+	
+</log4j:configuration>
Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/web.xml	(revision )
+++ src/main/webapp/WEB-INF/web.xml	(revision )
@@ -0,0 +1,89 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
+
+
+    <!-- Описание корневого контейнера, разделяемого всеми сервлетами и фильтрами -->
+    <context-param>
+        <param-name>contextConfigLocation</param-name>
+        <param-value>
+            /WEB-INF/spring/root-context.xml
+        </param-value>
+    </context-param>
+
+    <!-- Создаёт контейнер Spring, разделяемый всеми сервлетами и фильтрами -->
+    <listener>
+        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
+    </listener>
+
+    <filter>
+        <filter-name>hibernateFilter</filter-name>
+        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
+        <init-param>
+            <param-name>singleSession</param-name>
+            <param-value>true</param-value>
+        </init-param>
+        <init-param>
+            <param-name>sessionFactory</param-name>
+            <param-value>sessionFactory</param-value>
+        </init-param>
+        <init-param>
+            <param-name>contextConfigLocation</param-name>
+            <param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
+        </init-param>
+    </filter>
+
+    <filter-mapping>
+        <filter-name>hibernateFilter</filter-name>
+        <url-pattern>/</url-pattern>
+    </filter-mapping>
+
+    <!-- Базовый сервлет, обрабатывает все запросы к приложению -->
+    <servlet>
+        <servlet-name>appServlet</servlet-name>
+        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
+        <init-param>
+            <param-name>contextConfigLocation</param-name>
+            <param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
+        </init-param>
+        <load-on-startup>1</load-on-startup>
+    </servlet>
+
+    <servlet-mapping>
+        <servlet-name>appServlet</servlet-name>
+        <url-pattern>/</url-pattern>
+    </servlet-mapping>
+
+
+
+    <!-- Фильтр для перекодировки в utf8 -->
+    <filter>
+        <filter-name>charsetFilter</filter-name>
+        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
+        <init-param>
+            <param-name>encoding</param-name>
+            <param-value>UTF-8</param-value>
+        </init-param>
+        <init-param>
+            <param-name>forceEncoding</param-name>
+            <param-value>true</param-value>
+        </init-param>
+    </filter>
+    <filter-mapping>
+        <filter-name>charsetFilter</filter-name>
+        <url-pattern>/*</url-pattern>
+    </filter-mapping>
+
+    <filter>
+        <filter-name>springSecurityFilterChain</filter-name>
+        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
+    </filter>
+    <filter-mapping>
+        <filter-name>springSecurityFilterChain</filter-name>
+        <url-pattern>/*</url-pattern>
+    </filter-mapping>
+
+
+
+</web-app>
\ No newline at end of file
Index: .idea/libraries/Maven__asm_asm_1_5_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__asm_asm_1_5_3.xml	(revision )
+++ .idea/libraries/Maven__asm_asm_1_5_3.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: asm:asm:1.5.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/asm/asm/1.5.3/asm-1.5.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/asm/asm/1.5.3/asm-1.5.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/asm/asm/1.5.3/asm-1.5.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hibernate_hibernate_commons_annotations_3_3_0_ga.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_hibernate_hibernate_commons_annotations_3_3_0_ga.xml	(revision )
+++ .idea/libraries/Maven__org_hibernate_hibernate_commons_annotations_3_3_0_ga.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate:hibernate-commons-annotations:3.3.0.ga">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/updater/UpdateUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/updater/UpdateUtils.java	(revision )
+++ src/main/java/net/pss/beck/updater/UpdateUtils.java	(revision )
@@ -0,0 +1,31 @@
+package net.pss.beck.updater;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by amyalenkov on 17.01.14.
+ */
+public class UpdateUtils {
+
+    protected List<String> toListNameTeams(List<Team> teams){
+        List<String> listTeams = new ArrayList<String>();
+        for(Team team : teams){
+            listTeams.add(team.getName());
+        }
+        return listTeams;
+    }
+
+    protected List<String> toListPlayersNameData(List<Player> players) {
+        List<String> listPlayers = new ArrayList<String>();
+        for(Player player : players){
+            listPlayers.add(player.getLastName()+player.getData());
+        }
+        return listPlayers;
+    }
+
+
+}
Index: .idea/libraries/Maven__org_hibernate_ejb3_persistence_1_0_1_GA.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_hibernate_ejb3_persistence_1_0_1_GA.xml	(revision )
+++ .idea/libraries/Maven__org_hibernate_ejb3_persistence_1_0_1_GA.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate:ejb3-persistence:1.0.1.GA">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/ejb3-persistence/1.0.1.GA/ejb3-persistence-1.0.1.GA.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/ejb3-persistence/1.0.1.GA/ejb3-persistence-1.0.1.GA-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/ejb3-persistence/1.0.1.GA/ejb3-persistence-1.0.1.GA-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/domain/Contact.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/domain/Contact.java	(revision )
+++ src/main/java/net/pss/beck/domain/Contact.java	(revision )
@@ -0,0 +1,72 @@
+package net.pss.beck.domain;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+@Entity
+@Table(name = "CONTACTS")
+public class Contact {
+
+	@Id
+	@Column(name = "ID")
+	@GeneratedValue
+	private Integer id;
+
+	@Column(name = "FIRSTNAME")
+	private String firstname;
+
+	@Column(name = "LASTNAME")
+	private String lastname;
+
+	@Column(name = "EMAIL")
+	private String email;
+
+	@Column(name = "TELEPHONE")
+	private String telephone;
+
+	public Integer getId() {
+		return id;
+	}
+
+	public void setId(Integer id) {
+		this.id = id;
+	}
+
+	public String getFirstname() {
+		return firstname;
+	}
+
+	public void setFirstname(String firstname) {
+		this.firstname = firstname;
+	}
+
+	public String getLastname() {
+		return lastname;
+	}
+
+	public void setLastname(String lastname) {
+		this.lastname = lastname;
+	}
+
+	public String getEmail() {
+		return email;
+	}
+
+	public void setEmail(String email) {
+		this.email = email;
+	}
+
+	public String getTelephone() {
+		return telephone;
+	}
+
+	public void setTelephone(String telephone) {
+		this.telephone = telephone;
+	}
+
+	// Getters and setters
+	
+}
Index: src/main/java/net/pss/beck/dao/TeamDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/dao/TeamDAO.java	(revision )
+++ src/main/java/net/pss/beck/dao/TeamDAO.java	(revision )
@@ -0,0 +1,23 @@
+package net.pss.beck.dao;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Created by amyalenkov on 05.01.14.
+ */
+public interface TeamDAO {
+    public void addTeam(Team team);
+
+    public List<Team> getListTeams();
+
+    public Map<Player, Integer> getPlayersByTeamId(Integer id);
+
+    public Team getTeamById(Integer id);
+
+    public Team getTeamByName(String name);
+
+}
Index: .idea/libraries/junit_junit_4_11.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/junit_junit_4_11.xml	(revision )
+++ .idea/libraries/junit_junit_4_11.xml	(revision )
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="junit:junit:4.11" type="repository">
+    <properties maven-id="junit:junit:4.11" />
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.11/junit-4.11.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_jcl_over_slf4j_1_5_10.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_slf4j_jcl_over_slf4j_1_5_10.xml	(revision )
+++ .idea/libraries/Maven__org_slf4j_jcl_over_slf4j_1_5_10.xml	(revision )
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:jcl-over-slf4j:1.5.10">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/net/pss/beck/parser/ParserHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/pss/beck/parser/ParserHelper.java	(revision )
+++ src/main/java/net/pss/beck/parser/ParserHelper.java	(revision )
@@ -0,0 +1,134 @@
+package net.pss.beck.parser;
+
+import net.pss.beck.domain.Player;
+import net.pss.beck.domain.Team;
+import org.jsoup.Jsoup;
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Element;
+import org.jsoup.select.Elements;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Created by amyalenkov on 06.01.14.
+ */
+public class ParserHelper {
+
+    private static final String URL = "http://www.transfermarkt.de";
+    private static final String URL_EURO_CHAMPS =
+            "http://www.transfermarkt.de/en/europa/europa/wettbewerbe.html";
+
+    Map<String,Player> numberPlayer = new HashMap<String, Player>();
+
+    public Map<String,Player> getNumberPlayer(){
+        return numberPlayer;
+    }
+
+    public List<Team> getAllTeamsInTour(String tournamentName) throws IOException {
+        List<Team> teams = new ArrayList<Team>();
+        Team team;
+        Document doc = getDoc(URL+getUrlTournamentName(tournamentName));
+        Elements country = doc.getElementsByAttributeValue("class","s18 tdn");
+        String countryName = country.get(0).attr("title");
+
+        Elements links1 = doc.getElementsByAttributeValue("id","vereine").get(0).
+                getElementsByAttributeValue("class", "s10");
+        //выбираем команды без последнего элемента
+        for(int i =0;i<links1.size()-1;i++){
+//            System.out.println(links1.get(i).attr("title"));
+            team = new Team();
+            team.setCounrty(countryName);
+            team.setName(links1.get(i).attr("title"));
+            teams.add(team);
+        }
+        return teams;
+    }
+
+    public List<Player> getPlayersOfTeam(String teamName,String tournamentName) throws IOException {
+        List<Player> players = new ArrayList<Player>();
+        Player player;
+        Document doc = getDoc(URL+getTeamUrl(teamName,tournamentName));
+        Elements links1 = doc.getElementsByAttributeValue("id","spieler").get(0).getElementsByAttributeValue("class","hell");
+        Elements links2 = doc.getElementsByAttributeValue("id","spieler").get(0).getElementsByAttributeValue("class","dunkel");
+        for(Element element : links1){
+            String firstLastName = element.getElementsByAttribute("href").get(0).attr("title");
+            String firstName = firstLastName.replaceAll("\\s\\D+", "");
+            String lastName = firstLastName.replaceAll("\\D+\\s","");
+            String number = element.getElementsByAttribute("src").get(0).attr("title");
+            player = new Player();
+            player.setFirstName(firstName);
+            player.setLastName(lastName);
+            getPlayer(player, URL + element.getElementsByAttribute("href").get(0).attr("href"));
+            players.add(player);
+            numberPlayer.put(number.replaceAll("\\D+", ""), player);
+
+        }
+        for(Element element : links2){
+            String firstLastName = element.getElementsByAttribute("href").get(0).attr("title");
+            String firstName = firstLastName.replaceAll("\\s\\D+", "");
+            String lastName = firstLastName.replaceAll("\\D+\\s","");
+            String number = element.getElementsByAttribute("src").get(0).attr("title");
+            player = new Player();
+            player.setFirstName(firstName);
+            player.setLastName(lastName);
+            getPlayer(player, URL+element.getElementsByAttribute("href").get(0).attr("href"));
+            players.add(player);
+            numberPlayer.put(number.replaceAll("\\D+",""),player);
+
+        }
+        return players;
+    }
+
+    private void getPlayer(Player player, String urlPlayer) throws IOException {
+        Document doc = getDoc(urlPlayer);
+        Elements links = doc.getElementsByAttributeValue("class","tabelle_spieler s10");
+        for(Element link : links) {
+            String country = link.getElementsByAttributeValue("class", "country-name s10").text();
+            String data = link.getElementsByAttributeValue("class","s10").text();
+            player.setData(data.replaceAll("\\D",""));
+            player.setCounrty(country);
+        }
+    }
+
+    private String getTeamUrl(String teamName, String tournamentName) throws IOException {
+        String teamUrl = "";
+        String tourName = getUrlTournamentName(tournamentName);
+        Document doc1 = getDoc(URL+tourName);
+        Elements links1 = doc1.getElementsByAttributeValue("id","vereine").get(0).getElementsByAttributeValue("class","s10");
+        for(Element link : links1){
+            if(link.attr("title").equals(teamName)){
+                teamUrl = link.attr("href");
+            }
+        }
+        if(teamUrl.equals("")){
+            throw new Error("TeamName \'"+teamName+"\' is not present on "+URL+tourName);
+        }
+        return teamUrl;
+    }
+
+    private String getUrlTournamentName(String tournamentName) throws IOException {
+        String nameTourUrl = "";
+        Document doc = getDoc(URL_EURO_CHAMPS);
+        Elements links = doc.getElementsByClass("al").tagName("a");
+        for(Element link : links) {
+            if(link.text().equals(tournamentName)){
+                nameTourUrl = link.getElementsByAttribute("href").attr("href");
+            }
+        }
+        if(nameTourUrl.equals("")){
+            throw new Error("Tournament \'"+tournamentName+"\' is not present on "+URL_EURO_CHAMPS);
+        }
+        return nameTourUrl;
+    }
+
+    private Document getDoc(String url) throws IOException {
+        return Jsoup.connect(url).
+                userAgent("Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.110 Safari/537.36")
+                .timeout(0).followRedirects(true).execute().parse();
+    }
+
+}
